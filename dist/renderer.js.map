{"version":3,"sources":["../src/renderer.js"],"names":["$","kbn","moment","DataTable","DatatableRenderer","panel","table","isUtc","sanitize","linkSrv","formatters","colorState","value","style","thresholds","i","length","colors","_","first","v","undefined","isArray","join","escape","column","defaultCellFormatter","type","date","utc","format","dateFormat","valueFormatter","valueFormats","unit","isString","colorMode","getColorForValue","decimals","colIndex","styles","columns","regex","stringToJsRegex","pattern","text","match","createColumnFormatter","rowData","formattedRowData","y","row","rows","cellData","formatColumnValue","hidden","formatDrilldown","push","rowNumbersEnabled","unshift","columnNumber","colStyle","items","split","bgColor","bgColorIndex","color","colorIndex","isNaN","parseFloat","replace","getStyleForColumn","cell","rowcolumn","getColorIndexForValue","columnDefs","_this","rowNumberOffset","title","td","col","css","fontSize","actualColumn","rowColor","rowColorIndex","rowColorData","getCellColors","parentNode","children","aChild","colorData","should_destroy","fn","dataTable","isDataTable","id","aDT","destroy","empty","err","console","log","message","formattedData","generateFormattedData","panelHeight","orderSetting","tableOptions","searching","searchEnabled","info","infoEnabled","lengthChange","lengthChangeEnabled","scrollCollapse","saveState","data","scroll","paging","scrollY","pagingType","datatablePagingType","newDT","visible","compactRowsEnabled","addClass","stripedRowsEnabled","hoverEnabled","orderColumnEnabled","showCellBorders","showRowBorders","rowsPerPage","page","len","draw","on","search","order","nodes","each","innerHTML","columnText","drilldowns","drilldown","regexp","RegExp","alias","test","scopedVars","separator","trim","values","repeat","link","getPanelLinkAnchorInfo","target","href","new_row"],"mappings":"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","file":"renderer.js","sourcesContent":["import $ from 'jquery';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport moment from 'moment';\r\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\r\n\r\nexport class DatatableRenderer {\r\n  constructor(panel, table, isUtc, sanitize, linkSrv) {\r\n    this.formatters = [];\r\n    this.colorState = {};\r\n    this.panel = panel;\r\n    this.table = table;\r\n    this.isUtc = isUtc;\r\n    this.sanitize = sanitize;\r\n    this.linkSrv = linkSrv;\r\n  }\r\n\r\n  /**\r\n   * Given a value, return the color corresponding to the threshold set\r\n   * @param  {[Float]} value [Value to be evaluated]\r\n   * @param  {[Array]} style [Settings containing colors and thresholds]\r\n   * @return {[String]}       [color]\r\n   */\r\n  getColorForValue(value, style) {\r\n    if (!style.thresholds) {\r\n      return null;\r\n    }\r\n    for (var i = style.thresholds.length; i > 0; i--) {\r\n      if (value >= style.thresholds[i - 1]) {\r\n        return style.colors[i];\r\n      }\r\n    }\r\n    return _.first(style.colors);\r\n  }\r\n\r\n  // to determine the overall row color, the index of the threshold is needed\r\n  getColorIndexForValue(value, style) {\r\n    if (!style.thresholds) {\r\n      return null;\r\n    }\r\n    for (var i = style.thresholds.length; i > 0; i--) {\r\n      if (value >= style.thresholds[i - 1]) {\r\n        return i;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * [defaultCellFormatter description]\r\n   * @param  {[type]} v     [description]\r\n   * @param  {[type]} style [description]\r\n   * @return {[type]}       [description]\r\n   */\r\n  defaultCellFormatter(v, style) {\r\n    if (v === null || v === void 0 || v === undefined) {\r\n      return '';\r\n    }\r\n    if (_.isArray(v)) {\r\n      v = v.join(', ');\r\n    }\r\n    if (style && style.sanitize) {\r\n      return this.sanitize(v);\r\n    } else {\r\n      return _.escape(v);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * [createColumnFormatter description]\r\n   * @param  {[type]} style  [description]\r\n   * @param  {[type]} column [description]\r\n   * @return {[type]}        [description]\r\n   */\r\n  createColumnFormatter(style, column) {\r\n    if (!style) {\r\n      return this.defaultCellFormatter;\r\n    }\r\n    if (style.type === 'hidden') {\r\n      return v => {\r\n        return undefined;\r\n      };\r\n    }\r\n    if (style.type === 'date') {\r\n      return v => {\r\n        if (v === undefined || v === null) {\r\n          return '-';\r\n        }\r\n        if (_.isArray(v)) {\r\n          v = v[0];\r\n        }\r\n        var date = moment(v);\r\n        if (this.isUtc) {\r\n          date = date.utc();\r\n        }\r\n        return date.format(style.dateFormat);\r\n      };\r\n    }\r\n    if (style.type === 'number') {\r\n      let valueFormatter = kbn.valueFormats[column.unit || style.unit];\r\n      return v => {\r\n        if (v === null || v === void 0) {\r\n          return '-';\r\n        }\r\n        if (_.isString(v)) {\r\n          return this.defaultCellFormatter(v, style);\r\n        }\r\n        if (style.colorMode) {\r\n          this.colorState[style.colorMode] = this.getColorForValue(v, style);\r\n        }\r\n        return valueFormatter(v, style.decimals, null);\r\n      };\r\n    }\r\n    return (value) => {\r\n      return this.defaultCellFormatter(value, style);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * [formatColumnValue description]\r\n   * @param  {[type]} colIndex [description]\r\n   * @param  {[type]} value    [description]\r\n   * @return {[type]}          [description]\r\n   */\r\n  formatColumnValue(colIndex, value) {\r\n    if (this.formatters[colIndex]) {\r\n      return this.formatters[colIndex](value);\r\n    }\r\n\r\n    for (let i = 0; i < this.panel.styles.length; i++) {\r\n      let style = this.panel.styles[i];\r\n      let column = this.table.columns[colIndex];\r\n      var regex = kbn.stringToJsRegex(style.pattern);\r\n      if (column.text.match(regex)) {\r\n        this.formatters[colIndex] = this.createColumnFormatter(style, column);\r\n        return this.formatters[colIndex](value);\r\n      }\r\n    }\r\n\r\n    this.formatters[colIndex] = this.defaultCellFormatter;\r\n    return this.formatters[colIndex](value);\r\n  }\r\n\r\n  /**\r\n   * [generateFormattedData description]\r\n   * @param  {[type]} rowData [description]\r\n   * @return {[type]}         [description]\r\n   */\r\n  generateFormattedData(rowData) {\r\n    let formattedRowData = [];\r\n    for (var y = 0; y < rowData.length; y++) {\r\n      let row = this.table.rows[y];\r\n      let cellData = [];\r\n      //cellData.push('');\r\n      for (var i = 0; i < this.table.columns.length; i++) {\r\n        let value = this.formatColumnValue(i, row[i]);\r\n        if (value === undefined) {\r\n          this.table.columns[i].hidden = true;\r\n        } else {\r\n            value = this.formatDrilldown(this.table.columns[i].text,value,this.panel,this.linkSrv);\r\n        }\r\n        cellData.push(value);\r\n      }\r\n      if (this.panel.rowNumbersEnabled) {\r\n        cellData.unshift('rowCounter');\r\n      }\r\n      formattedRowData.push(cellData);\r\n    }\r\n    return formattedRowData;\r\n  }\r\n\r\n  getStyleForColumn(columnNumber) {\r\n    let colStyle = null;\r\n    for (let i = 0; i < this.panel.styles.length; i++) {\r\n      let style = this.panel.styles[i];\r\n      let column = this.table.columns[columnNumber];\r\n      if (column === undefined) break;\r\n      var regex = kbn.stringToJsRegex(style.pattern);\r\n      if (column.text.match(regex)) {\r\n        colStyle = style;\r\n        break;\r\n      }\r\n    }\r\n    return colStyle;\r\n  }\r\n\r\n  getCellColors(colorState, columnNumber, cellData) {\r\n    var items = cellData.split(/(\\s+)/);\r\n    // only color cell if the content is a number?\r\n    var bgColor = null;\r\n    var bgColorIndex = null;\r\n    var color = null;\r\n    var colorIndex = null;\r\n    let colStyle = null;\r\n    let value = null;\r\n    // check if the content has a numeric value after the split\r\n    if (!isNaN(items[0])) {\r\n      // run value through threshold function\r\n      value = parseFloat(items[0].replace(\",\", \".\"));\r\n      colStyle = this.getStyleForColumn(columnNumber);\r\n    }\r\n    if (colStyle !== null) {\r\n      // check color for either cell or row\r\n      if ((colorState.cell) || (colorState.row) || (colorState.rowcolumn)){\r\n        // bgColor = _this.colorState.cell;\r\n        bgColor = this.getColorForValue(value, colStyle);\r\n        bgColorIndex = this.getColorIndexForValue(value, colStyle);\r\n        color = 'white';\r\n      }\r\n      // just the value color is set\r\n      if (colorState.value) {\r\n        //color = _this.colorState.value;\r\n        color = this.getColorForValue(value, colStyle);\r\n        colorIndex = this.getColorIndexForValue(value, colStyle);\r\n      }\r\n    }\r\n    return {\r\n      bgColor: bgColor,\r\n      bgColorIndex: bgColorIndex,\r\n      color: color,\r\n      colorIndex: colorIndex\r\n    };\r\n  }\r\n  /**\r\n   * Construct table using Datatables.net API\r\n   *  multiple types supported\r\n   * timeseries_to_rows (column 0 = timestamp)\r\n   * timeseries_to_columns\r\n   * timeseries_aggregations - column 0 is the metric name (series name, not a timestamp)\r\n   * annotations - specific headers for this\r\n   * table\r\n   * json (raw)\r\n   * columns[x].type === \"date\" then set columndefs to parse the date, otherwise leave it as default\r\n   * convert table.columns[N].text to columns formatted to datatables.net format\r\n   * @return {[Boolean]} True if loaded without errors\r\n   */\r\n  render() {\r\n    if (this.table.columns.length === 0) return;\r\n    var columns = [];\r\n    var columnDefs = [];\r\n    var _this = this;\r\n    var rowNumberOffset = 0;\r\n    if (this.panel.rowNumbersEnabled) {\r\n      rowNumberOffset = 1;\r\n      columns.push({\r\n        title: '',\r\n        type: 'number'\r\n      });\r\n      columnDefs.push(\r\n        {\r\n            \"searchable\": false,\r\n            \"orderable\": false,\r\n            \"targets\": 0,\r\n            \"width\": \"1%\",\r\n        });\r\n    }\r\n    for (let i = 0; i < this.table.columns.length; i++) {\r\n      /* jshint loopfunc: true */\r\n      columns.push({\r\n        title: this.table.columns[i].text,\r\n        type: this.table.columns[i].type\r\n      });\r\n        columnDefs.push(\r\n          {\r\n            \"targets\": i + rowNumberOffset,\r\n            \"createdCell\": function (td, cellData, rowData, row, col) {\r\n              // hidden columns have null data\r\n              if (cellData === null) return;\r\n              // set the fontsize for the cell\r\n              $(td).css('font-size', _this.panel.fontSize);\r\n              // undefined types should have numerical data, any others are already formatted\r\n              let actualColumn = col;\r\n              if (_this.panel.rowNumbersEnabled) {\r\n                actualColumn -= 1;\r\n              }\r\n              if (_this.table.columns[actualColumn].type !== undefined) return;\r\n              // for coloring rows, get the \"worst\" threshold\r\n              var rowColor = null;\r\n              var color = null;\r\n              var rowColorIndex = null;\r\n              var rowColorData = null;\r\n              if (_this.colorState.row) {\r\n                // run all of the rowData through threshold check, get the \"highest\" index\r\n                // and use that for the entire row\r\n                if (rowData === null) return;\r\n                rowColorIndex = -1;\r\n                rowColorData = null;\r\n                rowColor = _this.colorState.row;\r\n                // this should be configurable...\r\n                color = 'white';\r\n                for (let columnNumber = 0; columnNumber < _this.table.columns.length; columnNumber++) {\r\n                  // only columns of type undefined are checked\r\n                  if (_this.table.columns[columnNumber].type === undefined) {\r\n                    rowColorData = _this.getCellColors(_this.colorState, columnNumber, rowData[columnNumber + rowNumberOffset]);\r\n                    if (rowColorData.bgColorIndex !== null) {\r\n                      if (rowColorData.bgColorIndex > rowColorIndex) {\r\n                        rowColorIndex = rowColorData.bgColorIndex;\r\n                        rowColor = rowColorData.bgColor;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                // style the entire row (the parent of the td is the tr)\r\n                // this will color the rowNumber and Timestamp also\r\n                $(td.parentNode).children().css('color', color);\r\n                $(td.parentNode).children().css('background-color', rowColor);\r\n              }\r\n\r\n              if (_this.colorState.rowcolumn) {\r\n                // run all of the rowData through threshold check, get the \"highest\" index\r\n                // and use that for the entire row\r\n                if (rowData === null) return;\r\n                rowColorIndex = -1;\r\n                rowColorData = null;\r\n                rowColor = _this.colorState.rowcolumn;\r\n                // this should be configurable...\r\n                color = 'white';\r\n                for (let columnNumber = 0; columnNumber < _this.table.columns.length; columnNumber++) {\r\n                  // only columns of type undefined are checked\r\n                  if (_this.table.columns[columnNumber].type === undefined) {\r\n                    rowColorData = _this.getCellColors(_this.colorState, columnNumber, rowData[columnNumber + rowNumberOffset]);\r\n                    if (rowColorData.bgColorIndex !== null) {\r\n                      if (rowColorData.bgColorIndex > rowColorIndex) {\r\n                        rowColorIndex = rowColorData.bgColorIndex;\r\n                        rowColor = rowColorData.bgColor;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                // style the rowNumber and Timestamp column\r\n                // the cell colors will be determined in the next phase\r\n                if (_this.table.columns[0].type !== undefined) {\r\n                  var children = $(td.parentNode).children();\r\n                  var aChild = children[0];\r\n                  $(aChild).css('color', color);\r\n                  $(aChild).css('background-color', rowColor);\r\n                  // the 0 column contains the row number, if they are enabled\r\n                  // then the above just filled in the color for the row number,\r\n                  // now take care of the timestamp\r\n                  if (_this.panel.rowNumbersEnabled) {\r\n                    aChild = children[1];\r\n                    $(aChild).css('color', color);\r\n                    $(aChild).css('background-color', rowColor);\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Process cell coloring\r\n              // Two scenarios:\r\n              //    1) Cell coloring is enabled, the above row color is skipped\r\n              //    2) RowColumn is enabled, the above row color is process, but we also\r\n              //    set the cell colors individually\r\n              var colorData = _this.getCellColors(_this.colorState, actualColumn, cellData);\r\n              if ((_this.colorState.cell) || (_this.colorState.rowcolumn)){\r\n                if (colorData.color !== undefined) {\r\n                  $(td).css('color', colorData.color);\r\n                }\r\n                if (colorData.bgColor !== undefined) {\r\n                  $(td).css('background-color', colorData.bgColor);\r\n                }\r\n              } else if (_this.colorState.value) {\r\n                if (colorData.color !== undefined) {\r\n                  $(td).css('color', colorData.color);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        );\r\n    }\r\n\r\n    try {\r\n      var should_destroy = false;\r\n      if ( $.fn.dataTable.isDataTable( '#datatable-panel-table-' + this.panel.id )) {\r\n        should_destroy = true;\r\n      }\r\n      if (should_destroy) {\r\n        var aDT = $('#datatable-panel-table-' + this.panel.id).DataTable();\r\n        aDT.destroy();\r\n        $('#datatable-panel-table-' + this.panel.id).empty();\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.log(\"Exception: \" + err.message);\r\n    }\r\n    // sanity check\r\n    // annotations come back as 4 items in an array per row. If the first row content is undefined, then modify to empty\r\n    // since datatables.net throws errors\r\n    if (this.table.rows[0].length === 4) {\r\n      if (this.table.rows[0][0] === undefined) {\r\n        // detected empty annotations\r\n        this.table.rows = [];\r\n      }\r\n    }\r\n    // pass the formatted rows into the datatable\r\n    var formattedData = this.generateFormattedData(this.table.rows);\r\n\r\n    if (this.panel.rowNumbersEnabled) {\r\n      // shift the data to the right\r\n    }\r\n    var panelHeight = this.panel.panelHeight;\r\n    let orderSetting = [[0, 'desc']];\r\n    if (this.panel.rowNumbersEnabled) {\r\n      // when row numbers are enabled, show them ascending\r\n      orderSetting = [[0, 'asc']];\r\n    }\r\n\r\n    var tableOptions = {\r\n      \"lengthMenu\": [ [5, 10, 25, 50, 75, 100, -1], [5, 10, 25, 50, 75, 100, \"All\"] ],\r\n      searching: this.panel.searchEnabled,\r\n      info: this.panel.infoEnabled,\r\n      lengthChange: this.panel.lengthChangeEnabled,\r\n      scrollCollapse: false,\r\n      saveState: true,\r\n      data: formattedData,\r\n      columns: columns,\r\n      columnDefs: columnDefs,\r\n      \"search\": {\r\n        \"regex\": true\r\n      },\r\n      \"order\": orderSetting\r\n    };\r\n    if (this.panel.scroll) {\r\n      tableOptions.paging = false;\r\n      tableOptions.scrollY = panelHeight;\r\n    } else {\r\n      tableOptions.paging = true;\r\n      tableOptions.pagingType = this.panel.datatablePagingType;\r\n    }\r\n    var newDT = $('#datatable-panel-table-' + this.panel.id).DataTable(tableOptions);\r\n\r\n    // hide columns that are marked hidden\r\n    for (let i = 0; i < this.table.columns.length; i++) {\r\n      if (this.table.columns[i].hidden) {\r\n        newDT.column( i + rowNumberOffset ).visible( false );\r\n      }\r\n    }\r\n\r\n    // enable compact mode\r\n    if (this.panel.compactRowsEnabled) {\r\n      $('#datatable-panel-table-' + this.panel.id).addClass( 'compact' );\r\n    }\r\n    // enable striped mode\r\n    if (this.panel.stripedRowsEnabled) {\r\n      $('#datatable-panel-table-' + this.panel.id).addClass( 'stripe' );\r\n    }\r\n    if (this.panel.hoverEnabled) {\r\n      $('#datatable-panel-table-' + this.panel.id).addClass( 'hover' );\r\n    }\r\n    if (this.panel.orderColumnEnabled) {\r\n      $('#datatable-panel-table-' + this.panel.id).addClass( 'order-column' );\r\n    }\r\n    // these two are mutually exclusive\r\n    if (this.panel.showCellBorders) {\r\n      $('#datatable-panel-table-' + this.panel.id).addClass( 'cell-border' );\r\n    } else {\r\n      if (this.panel.showRowBorders) {\r\n        $('#datatable-panel-table-' + this.panel.id).addClass( 'row-border' );\r\n      }\r\n    }\r\n    if (!this.panel.scroll) {\r\n      // set the page size\r\n      if (this.panel.rowsPerPage !== null) {\r\n        newDT.page.len( this.panel.rowsPerPage ).draw();\r\n      }\r\n    }\r\n    // function to display row numbers\r\n    if (this.panel.rowNumbersEnabled) {\r\n      newDT.on( 'order.dt search.dt', function () {\r\n        newDT.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n            cell.innerHTML = i+1;\r\n        } );\r\n      } ).draw();\r\n    }\r\n  }\r\n\r\n  formatDrilldown(columnText,value,panel,linkSrv){\r\n        if (!panel.drilldowns||!linkSrv){\r\n            return value;\r\n        }\r\n\r\n        for (var y = 0; y < panel.drilldowns.length; y++){\r\n            var drilldown = panel.drilldowns[y];\r\n            var regexp = new RegExp(drilldown.alias);\r\n            if (regexp.test(columnText)){\r\n\r\n                var scopedVars = {};\r\n\r\n                scopedVars[columnText] = {\"value\": value};\r\n\r\n                if (drilldown.separator && drilldown.separator.trim().length>0){\r\n                    var values = value.split(drilldown.separator);\r\n                    for (var i = 0; i < values.length; i++ ){\r\n                        scopedVars[\"alias\"+i] = {\"value\": values[i]};\r\n                    }\r\n                }\r\n\r\n                //add panel.scopedVars for repeat var\r\n                if (panel.repeat && panel.scopedVars[panel.repeat] && panel.scopedVars[panel.repeat].value){\r\n                    scopedVars[panel.repeat] = panel.scopedVars[panel.repeat].value;\r\n                }\r\n\r\n                var link = linkSrv.getPanelLinkAnchorInfo(drilldown,scopedVars);\r\n\r\n                return '<a class=\"panel-menu-link\" style=\"color:#33B5E5;\" target=\"'+link.target+'\" href=\"'+link.href+'\">' + link.title + '</a>';\r\n\r\n            }\r\n        }\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n  render_values() {\r\n      let rows = [];\r\n\r\n      for (var y = 0; y < this.table.rows.length; y++) {\r\n        let row = this.table.rows[y];\r\n        let new_row = [];\r\n        for (var i = 0; i < this.table.columns.length; i++) {\r\n            new_row.push( this.formatColumnValue(i, row[i]));\r\n        }\r\n        rows.push(new_row);\r\n      }\r\n      return {\r\n          columns: this.table.columns,\r\n          rows: rows,\r\n      };\r\n  }\r\n}\r\n"]}