{"version":3,"sources":["../src/renderer.js"],"names":["$","kbn","moment","DataTable","DatatableRenderer","panel","table","isUtc","sanitize","linkSrv","formatters","colorState","value","style","thresholds","i","length","colors","_","first","v","undefined","isArray","join","escape","column","defaultCellFormatter","type","date","utc","format","dateFormat","valueFormatter","valueFormats","unit","isString","colorMode","getColorForValue","decimals","colIndex","styles","columns","regex","stringToJsRegex","pattern","text","match","createColumnFormatter","rowData","formattedRowData","y","row","rows","cellData","formatColumnValue","hidden","formatDrilldown","push","rowNumbersEnabled","unshift","columnNumber","colStyle","items","split","bgColor","bgColorIndex","color","colorIndex","isNaN","parseFloat","replace","getStyleForColumn","cell","rowcolumn","getColorIndexForValue","columnDefs","_this","rowNumberOffset","title","header","td","col","css","fontSize","actualColumn","rowColor","rowColorIndex","rowColorData","getCellColors","parentNode","children","aChild","colorData","lengthChangeEnabled","responsive","hiddenColumns","j","responsivePriority","targets","should_destroy","fn","dataTable","isDataTable","id","aDT","destroy","empty","err","console","log","message","formattedData","generateFormattedData","panelHeight","orderSetting","sortField","sortDirection","tableOptions","searching","searchEnabled","info","infoEnabled","lengthChange","scrollCollapse","saveState","data","enable","dom","buttons","scroll","paging","scrollY","pagingType","datatablePagingType","collection","columnsToggle","columnsVisibility","columnToggle","columnVisibility","colvis","colvisGroup","colvisRestore","copy","copyHtml5","print","pageLength","csv","csvHtml5","excel","excelHtml5","pdf","pdfHtml5","selectAll","selectNone","selectCells","selectColumns","selectRows","newDT","visible","compactRowsEnabled","addClass","stripedRowsEnabled","hoverEnabled","orderColumnEnabled","showCellBorders","showRowBorders","rowsPerPage","page","len","draw","on","search","order","nodes","each","innerHTML","columnHeader","columnIndex","drilldowns","drilldown","regexp","RegExp","alias","columnText","test","scopedVars","separator","trim","values","repeat","link","getPanelLinkAnchorInfo","target","href","new_row"],"mappings":"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","file":"renderer.js","sourcesContent":["import $ from 'jquery';\nimport kbn from 'app/core/utils/kbn';\nimport moment from 'moment';\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\n\n\nexport class DatatableRenderer {\n    constructor(panel, table, isUtc, sanitize, linkSrv) {\n        this.formatters = [];\n        this.colorState = {};\n        this.panel = panel;\n        this.table = table;\n        this.isUtc = isUtc;\n        this.sanitize = sanitize;\n        this.linkSrv = linkSrv;\n    }\n\n    /**\n     * Given a value, return the color corresponding to the threshold set\n     * @param  {[Float]} value [Value to be evaluated]\n     * @param  {[Array]} style [Settings containing colors and thresholds]\n     * @return {[String]}       [color]\n     */\n    getColorForValue(value, style) {\n        if (!style.thresholds) {\n            return null;\n        }\n        for (var i = style.thresholds.length; i > 0; i--) {\n            if (value >= style.thresholds[i - 1]) {\n                return style.colors[i];\n            }\n        }\n        return _.first(style.colors);\n    }\n\n    // to determine the overall row color, the index of the threshold is needed\n    getColorIndexForValue(value, style) {\n        if (!style.thresholds) {\n            return null;\n        }\n        for (var i = style.thresholds.length; i > 0; i--) {\n            if (value >= style.thresholds[i - 1]) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * [defaultCellFormatter description]\n     * @param  {[type]} v     [description]\n     * @param  {[type]} style [description]\n     * @return {[type]}       [description]\n     */\n    defaultCellFormatter(v, style) {\n        if (v === null || v === void 0 || v === undefined) {\n            return '';\n        }\n        if (_.isArray(v)) {\n            v = v.join(', ');\n        }\n        if (style && style.sanitize) {\n            return this.sanitize(v);\n        } else {\n            return _.escape(v);\n        }\n    }\n\n    /**\n     * [createColumnFormatter description]\n     * @param  {[type]} style  [description]\n     * @param  {[type]} column [description]\n     * @return {[type]}        [description]\n     */\n    createColumnFormatter(style, column) {\n        if (!style) {\n            return this.defaultCellFormatter;\n        }\n        if (style.type === 'hidden') {\n            return v => {\n                return undefined;\n            };\n        }\n        if (style.type === 'date') {\n            return v => {\n                if (v === undefined || v === null) {\n                    return '-';\n                }\n                if (_.isArray(v)) {\n                    v = v[0];\n                }\n                var date = moment(v);\n                if (this.isUtc) {\n                    date = date.utc();\n                }\n                return date.format(style.dateFormat);\n            };\n        }\n        if (style.type === 'number') {\n            let valueFormatter = kbn.valueFormats[column.unit || style.unit];\n            return v => {\n                if (v === null || v === void 0) {\n                    return '-';\n                }\n                if (_.isString(v)) {\n                    return this.defaultCellFormatter(v, style);\n                }\n                if (style.colorMode) {\n                    this.colorState[style.colorMode] = this.getColorForValue(v, style);\n                }\n                return valueFormatter(v, style.decimals, null);\n            };\n        }\n        return (value) => {\n            return this.defaultCellFormatter(value, style);\n        };\n    }\n\n    /**\n     * [formatColumnValue description]\n     * @param  {[type]} colIndex [description]\n     * @param  {[type]} value    [description]\n     * @return {[type]}          [description]\n     */\n    formatColumnValue(colIndex, value) {\n        if (this.formatters[colIndex]) {\n            return this.formatters[colIndex](value);\n        }\n\n        for (let i = 0; i < this.panel.styles.length; i++) {\n            let style = this.panel.styles[i];\n            let column = this.table.columns[colIndex];\n            var regex = kbn.stringToJsRegex(style.pattern);\n            if (column.text.match(regex)) {\n                this.formatters[colIndex] = this.createColumnFormatter(style, column);\n                return this.formatters[colIndex](value);\n            }\n        }\n\n        this.formatters[colIndex] = this.defaultCellFormatter;\n        return this.formatters[colIndex](value);\n    }\n\n    /**\n     * [generateFormattedData description]\n     * @param  {[type]} rowData [description]\n     * @return {[type]}         [description]\n     */\n    generateFormattedData(rowData) {\n        let formattedRowData = [];\n        for (var y = 0; y < rowData.length; y++) {\n            let row = this.table.rows[y];\n            let cellData = [];\n            //cellData.push('');\n            for (var i = 0; i < this.table.columns.length; i++) {\n                let value = this.formatColumnValue(i, row[i]);\n                if (value === undefined) {\n                    this.table.columns[i].hidden = true;\n                } else {\n                    //this.table.columns[i].text\n                    value = this.formatDrilldown(this.table.columns, row, i, value, this.panel, this.linkSrv);\n                }\n                cellData.push(value);\n            }\n            if (this.panel.rowNumbersEnabled) {\n                cellData.unshift('rowCounter');\n            }\n            formattedRowData.push(cellData);\n        }\n        return formattedRowData;\n    }\n\n    getStyleForColumn(columnNumber) {\n        let colStyle = null;\n        for (let i = 0; i < this.panel.styles.length; i++) {\n            let style = this.panel.styles[i];\n            let column = this.table.columns[columnNumber];\n            if (column === undefined) break;\n            var regex = kbn.stringToJsRegex(style.pattern);\n            if (column.text.match(regex)) {\n                colStyle = style;\n                break;\n            }\n        }\n        return colStyle;\n    }\n\n    getCellColors(colorState, columnNumber, cellData) {\n        var items = cellData.split(/(\\s+)/);\n        // only color cell if the content is a number?\n        var bgColor = null;\n        var bgColorIndex = null;\n        var color = null;\n        var colorIndex = null;\n        let colStyle = null;\n        let value = null;\n        // check if the content has a numeric value after the split\n        if (!isNaN(items[0])) {\n            // run value through threshold function\n            value = parseFloat(items[0].replace(\",\", \".\"));\n            colStyle = this.getStyleForColumn(columnNumber);\n        }\n        if (colStyle !== null) {\n            // check color for either cell or row\n            if ((colorState.cell) || (colorState.row) || (colorState.rowcolumn)) {\n                // bgColor = _this.colorState.cell;\n                bgColor = this.getColorForValue(value, colStyle);\n                bgColorIndex = this.getColorIndexForValue(value, colStyle);\n                color = 'white';\n            }\n            // just the value color is set\n            if (colorState.value) {\n                //color = _this.colorState.value;\n                color = this.getColorForValue(value, colStyle);\n                colorIndex = this.getColorIndexForValue(value, colStyle);\n            }\n        }\n        return {\n            bgColor: bgColor,\n            bgColorIndex: bgColorIndex,\n            color: color,\n            colorIndex: colorIndex\n        };\n    }\n\n    /**\n     * Construct table using Datatables.net API\n     *  multiple types supported\n     * timeseries_to_rows (column 0 = timestamp)\n     * timeseries_to_columns\n     * timeseries_aggregations - column 0 is the metric name (series name, not a timestamp)\n     * annotations - specific headers for this\n     * table\n     * json (raw)\n     * columns[x].type === \"date\" then set columndefs to parse the date, otherwise leave it as default\n     * convert table.columns[N].text to columns formatted to datatables.net format\n     * @return {[Boolean]} True if loaded without errors\n     */\n    render() {\n        if (this.table.columns.length === 0) return;\n        var columns = [];\n        var columnDefs = [];\n        var _this = this;\n        var rowNumberOffset = 0;\n        if (this.panel.rowNumbersEnabled) {\n            rowNumberOffset = 1;\n            columns.push({\n                title: '',\n                type: 'number'\n            });\n            columnDefs.push(\n                {\n                    \"searchable\": false,\n                    \"orderable\": false,\n                    \"targets\": 0,\n                    \"width\": \"1%\",\n                });\n        }\n        for (let i = 0; i < this.table.columns.length; i++) {\n            /* jshint loopfunc: true */\n            var style = this.getStyleForColumn(i);\n\n            columns.push({\n                title: style != void 0 && style.header != void 0 ? style.header : this.table.columns[i].text,\n                type: this.table.columns[i].type\n            });\n            columnDefs.push(\n                {\n                    \"targets\": i + rowNumberOffset,\n                    \"createdCell\": function (td, cellData, rowData, row, col) {\n                        // hidden columns have null data\n                        if (cellData === null) return;\n                        // set the fontsize for the cell\n                        $(td).css('font-size', _this.panel.fontSize);\n                        // undefined types should have numerical data, any others are already formatted\n                        let actualColumn = col;\n                        if (_this.panel.rowNumbersEnabled) {\n                            actualColumn -= 1;\n                        }\n                        if (_this.table.columns[actualColumn].type !== undefined) return;\n                        // for coloring rows, get the \"worst\" threshold\n                        var rowColor = null;\n                        var color = null;\n                        var rowColorIndex = null;\n                        var rowColorData = null;\n                        if (_this.colorState.row) {\n                            // run all of the rowData through threshold check, get the \"highest\" index\n                            // and use that for the entire row\n                            if (rowData === null) return;\n                            rowColorIndex = -1;\n                            rowColorData = null;\n                            rowColor = _this.colorState.row;\n                            // this should be configurable...\n                            color = 'white';\n                            for (let columnNumber = 0; columnNumber < _this.table.columns.length; columnNumber++) {\n                                // only columns of type undefined are checked\n                                if (_this.table.columns[columnNumber].type === undefined) {\n                                    rowColorData = _this.getCellColors(_this.colorState, columnNumber, rowData[columnNumber + rowNumberOffset]);\n                                    if (rowColorData.bgColorIndex !== null) {\n                                        if (rowColorData.bgColorIndex > rowColorIndex) {\n                                            rowColorIndex = rowColorData.bgColorIndex;\n                                            rowColor = rowColorData.bgColor;\n                                        }\n                                    }\n                                }\n                            }\n                            // style the entire row (the parent of the td is the tr)\n                            // this will color the rowNumber and Timestamp also\n                            $(td.parentNode).children().css('color', color);\n                            $(td.parentNode).children().css('background-color', rowColor);\n                        }\n\n                        if (_this.colorState.rowcolumn) {\n                            // run all of the rowData through threshold check, get the \"highest\" index\n                            // and use that for the entire row\n                            if (rowData === null) return;\n                            rowColorIndex = -1;\n                            rowColorData = null;\n                            rowColor = _this.colorState.rowcolumn;\n                            // this should be configurable...\n                            color = 'white';\n                            for (let columnNumber = 0; columnNumber < _this.table.columns.length; columnNumber++) {\n                                // only columns of type undefined are checked\n                                if (_this.table.columns[columnNumber].type === undefined) {\n                                    rowColorData = _this.getCellColors(_this.colorState, columnNumber, rowData[columnNumber + rowNumberOffset]);\n                                    if (rowColorData.bgColorIndex !== null) {\n                                        if (rowColorData.bgColorIndex > rowColorIndex) {\n                                            rowColorIndex = rowColorData.bgColorIndex;\n                                            rowColor = rowColorData.bgColor;\n                                        }\n                                    }\n                                }\n                            }\n                            // style the rowNumber and Timestamp column\n                            // the cell colors will be determined in the next phase\n                            if (_this.table.columns[0].type !== undefined) {\n                                var children = $(td.parentNode).children();\n                                var aChild = children[0];\n                                $(aChild).css('color', color);\n                                $(aChild).css('background-color', rowColor);\n                                // the 0 column contains the row number, if they are enabled\n                                // then the above just filled in the color for the row number,\n                                // now take care of the timestamp\n                                if (_this.panel.rowNumbersEnabled) {\n                                    aChild = children[1];\n                                    $(aChild).css('color', color);\n                                    $(aChild).css('background-color', rowColor);\n                                }\n                            }\n                        }\n\n                        // Process cell coloring\n                        // Two scenarios:\n                        //    1) Cell coloring is enabled, the above row color is skipped\n                        //    2) RowColumn is enabled, the above row color is process, but we also\n                        //    set the cell colors individually\n                        var colorData = _this.getCellColors(_this.colorState, actualColumn, cellData);\n                        if ((_this.colorState.cell) || (_this.colorState.rowcolumn)) {\n                            if (colorData.color !== undefined) {\n                                $(td).css('color', colorData.color);\n                            }\n                            if (colorData.bgColor !== undefined) {\n                                $(td).css('background-color', colorData.bgColor);\n                            }\n                        } else if (_this.colorState.value) {\n                            if (colorData.color !== undefined) {\n                                $(td).css('color', colorData.color);\n                            }\n                        }\n                    }\n                }\n            );\n\n           if(this.panel.lengthChangeEnabled&&this.panel.responsive.hiddenColumns){\n               for(let j= 0; j< this.panel.responsive.hiddenColumns.length; j++){\n                   if(this.panel.responsive.hiddenColumns[j].text===this.table.columns[i].text){\n                       if (this.panel.rowNumbersEnabled) {\n                           columnDefs.push({responsivePriority: 10000 + j, targets: i+1});\n                       }else{\n                           columnDefs.push({responsivePriority: 10000 + j, targets: i});\n                       }\n                   }\n               }\n           }\n        }\n\n        try {\n            var should_destroy = false;\n            if ($.fn.dataTable.isDataTable('#datatable-panel-table-' + this.panel.id)) {\n                should_destroy = true;\n            }\n            if (should_destroy) {\n                var aDT = $('#datatable-panel-table-' + this.panel.id).DataTable();\n                aDT.destroy();\n                $('#datatable-panel-table-' + this.panel.id).empty();\n            }\n        }\n        catch (err) {\n            console.log(\"Exception: \" + err.message);\n        }\n        // sanity check\n        // annotations come back as 4 items in an array per row. If the first row content is undefined, then modify to empty\n        // since datatables.net throws errors\n        if (this.table.rows[0].length === 4) {\n            if (this.table.rows[0][0] === undefined) {\n                // detected empty annotations\n                this.table.rows = [];\n            }\n        }\n        // pass the formatted rows into the datatable\n        var formattedData = this.generateFormattedData(this.table.rows);\n\n        if (this.panel.rowNumbersEnabled) {\n            // shift the data to the right\n        }\n        var panelHeight = this.panel.panelHeight;\n        let orderSetting = [[0, 'desc']];\n        if (this.panel.sortField !== null) {\n            for (var i = 0; i < this.panel.columns.length; i++) {\n                if (this.panel.columns[i].value === this.panel.sortField) {\n                    if (this.panel.rowNumbersEnabled) {\n                        orderSetting = [[i + 1, this.panel.sortDirection]];\n                    } else {\n                        orderSetting = [[i, this.panel.sortDirection]];\n                    }\n                    break;\n                }\n            }\n        } else if (this.panel.rowNumbersEnabled) {\n            // when row numbers are enabled, show them ascending\n            orderSetting = [[0, 'asc']];\n        }\n\n        var tableOptions = {\n            \"lengthMenu\": [[5, 10, 15, 25, 50, 75, 100, -1], [5, 10, 25, 50, 75, 100, \"All\"]],\n            searching: this.panel.searchEnabled,\n            info: this.panel.infoEnabled,\n            lengthChange: this.panel.lengthChangeEnabled,\n            scrollCollapse: false,\n            saveState: true,\n            data: formattedData,\n            columns: columns,\n            columnDefs: columnDefs,\n            \"search\": {\n                \"regex\": true\n            },\n            \"order\": orderSetting,\n            responsive: this.panel.responsive.enable,\n            dom: 'Bfrtip',\n            buttons: []\n        };\n        if (this.panel.scroll) {\n            tableOptions.paging = false;\n            tableOptions.scrollY = panelHeight;\n        } else {\n            tableOptions.paging = true;\n            tableOptions.pagingType = this.panel.datatablePagingType;\n        }\n\n        if (this.panel.buttons.collection) {\n            tableOptions.buttons.push(\"collection\");\n        }\n\n        if (this.panel.buttons.columnsToggle) {\n            tableOptions.buttons.push(\"columnsToggle\");\n        }\n\n        if (this.panel.buttons.columnsVisibility) {\n            tableOptions.buttons.push(\"columnsVisibility\");\n        }\n\n        if (this.panel.buttons.columnToggle) {\n            tableOptions.buttons.push(\"columnToggle\");\n        }\n\n        if (this.panel.buttons.columnVisibility) {\n            tableOptions.buttons.push(\"columnVisibility\");\n        }\n\n        if (this.panel.buttons.colvis) {\n            tableOptions.buttons.push(\"colvis\");\n        }\n\n        if (this.panel.buttons.colvisGroup) {\n            tableOptions.buttons.push(\"colvisGroup\");\n        }\n\n        if (this.panel.buttons.colvisRestore) {\n            tableOptions.buttons.push(\"colvisRestore\");\n        }\n\n        if (this.panel.buttons.copy) {\n            tableOptions.buttons.push(\"copy\");\n        }\n\n        if (this.panel.buttons.copyHtml5) {\n            tableOptions.buttons.push(\"copyHtml5\");\n        }\n\n        if (this.panel.buttons.print) {\n            tableOptions.buttons.push(\"print\");\n        }\n\n        if (this.panel.buttons.pageLength) {\n            tableOptions.buttons.push(\"pageLength\");\n        }\n\n        if (this.panel.buttons.csv) {\n            tableOptions.buttons.push(\"csv\");\n        }\n\n        if (this.panel.buttons.csvHtml5) {\n            tableOptions.buttons.push(\"csvHtml5\");\n        }\n\n        if (this.panel.buttons.excel) {\n            tableOptions.buttons.push(\"excel\");\n        }\n\n        if (this.panel.buttons.excelHtml5) {\n            tableOptions.buttons.push(\"excelHtml5\");\n        }\n\n        if (this.panel.buttons.pdf) {\n            tableOptions.buttons.push(\"pdf\");\n        }\n\n        if (this.panel.buttons.pdfHtml5) {\n            tableOptions.buttons.push(\"pdfHtml5\");\n        }\n\n        if (this.panel.buttons.selectAll) {\n            tableOptions.buttons.push(\"selectAll\");\n        }\n\n        if (this.panel.buttons.selectNone) {\n            tableOptions.buttons.push(\"selectNone\");\n        }\n\n        if (this.panel.buttons.selectCells) {\n            tableOptions.buttons.push(\"selectCells\");\n        }\n\n        if (this.panel.buttons.selectColumns) {\n            tableOptions.buttons.push(\"selectColumns\");\n        }\n\n        if (this.panel.buttons.selectRows) {\n            tableOptions.buttons.push(\"selectRows\");\n        }\n\n\n\n        var newDT = $('#datatable-panel-table-' + this.panel.id).DataTable(tableOptions);\n\n        // hide columns that are marked hidden\n        for (let i = 0; i < this.table.columns.length; i++) {\n            if (this.table.columns[i].hidden) {\n                newDT.column(i + rowNumberOffset).visible(false);\n            }\n        }\n\n        // enable compact mode\n        if (this.panel.compactRowsEnabled) {\n            $('#datatable-panel-table-' + this.panel.id).addClass('compact');\n        }\n        // enable striped mode\n        if (this.panel.stripedRowsEnabled) {\n            $('#datatable-panel-table-' + this.panel.id).addClass('stripe');\n        }\n        if (this.panel.hoverEnabled) {\n            $('#datatable-panel-table-' + this.panel.id).addClass('hover');\n        }\n        if (this.panel.orderColumnEnabled) {\n            $('#datatable-panel-table-' + this.panel.id).addClass('order-column');\n        }\n        // these two are mutually exclusive\n        if (this.panel.showCellBorders) {\n            $('#datatable-panel-table-' + this.panel.id).addClass('cell-border');\n        } else {\n            if (this.panel.showRowBorders) {\n                $('#datatable-panel-table-' + this.panel.id).addClass('row-border');\n            }\n        }\n        if (!this.panel.scroll) {\n            // set the page size\n            if (this.panel.rowsPerPage !== null) {\n                newDT.page.len(this.panel.rowsPerPage).draw();\n            }\n        }\n        // function to display row numbers\n        if (this.panel.rowNumbersEnabled) {\n            newDT.on('order.dt search.dt', function () {\n                newDT.column(0, {search: 'applied', order: 'applied'}).nodes().each(function (cell, i) {\n                    cell.innerHTML = i + 1;\n                });\n            }).draw();\n        }\n    }\n\n    formatDrilldown(columnHeader, row, columnIndex, value, panel, linkSrv) {\n        if (!panel.drilldowns || !linkSrv) {\n            return value;\n        }\n\n\n        for (var y = 0; y < panel.drilldowns.length; y++) {\n            var drilldown = panel.drilldowns[y];\n            var regexp = new RegExp(drilldown.alias);\n            var columnText = columnHeader[columnIndex].text;\n            if (regexp.test(columnText)) {\n\n                var scopedVars = {};\n                for (var j = 0; j < columnHeader.length; j++) {\n                    scopedVars[columnHeader[j].text] = {\"value\": row[j]};\n                }\n\n                if (drilldown.separator && drilldown.separator.trim().length > 0) {\n                    var values = value.split(new RegExp(drilldown.separator));\n                    for (var i = 0; i < values.length; i++) {\n                        scopedVars[\"alias\" + i] = {\"value\": values[i]};\n                    }\n                }\n\n                //add panel.scopedVars for repeat var\n                if (panel.repeat && panel.scopedVars[panel.repeat] && panel.scopedVars[panel.repeat].value) {\n                    scopedVars[panel.repeat] = panel.scopedVars[panel.repeat].value;\n                }\n\n                var link = linkSrv.getPanelLinkAnchorInfo(drilldown, scopedVars);\n\n                return '<a class=\"panel-menu-link\" style=\"color:#33B5E5;\" target=\"' + link.target + '\" href=\"' + link.href + '\">' + link.title + '</a>';\n\n            }\n        }\n\n        return value;\n\n    }\n\n    render_values() {\n        let rows = [];\n\n        for (var y = 0; y < this.table.rows.length; y++) {\n            let row = this.table.rows[y];\n            let new_row = [];\n            for (var i = 0; i < this.table.columns.length; i++) {\n                new_row.push(this.formatColumnValue(i, row[i]));\n            }\n            rows.push(new_row);\n        }\n        return {\n            columns: this.table.columns,\n            rows: rows,\n        };\n    }\n}\n"]}