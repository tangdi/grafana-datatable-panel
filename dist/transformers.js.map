{"version":3,"sources":["../src/transformers.js"],"names":["getColumnInterchange","panel","interchange","array","split","length","names","values","getGroupByColumns","groupBys","groupBy","m","push","text","getCalculateColumns","expression","operator","expressions","totalColumns","i","parameters","operators","columns","j","getHiddenValues","hiddenValues","shouldHidden","name","value","indexOf","transformDataToTable","data","model","TableModel","transformer","transformers","transform","message","groupby","getInterchangeColummnName","dp","columnsName","w","join","appendValues","oldValue","newValue","$","isNumeric","initRow","row","x","calculateRow","z","result","a","map","totals","total","diffs","difference","rates","rate","series","y","datapoints","key","n","columnName","name1","name2","newRow","_","moment","flatten","TimeSeries","timeseries_to_rows","description","getColumns","type","rows","target","timeseries_to_columns","points","timeKey","toString","time","point","timeseries_aggregations","alias","getFlotPairs","cells","stats","annotations","evt","min","title","tags","table","undefined","json","maxDocs","Math","doc","flattened","propName","isObject","JSON","stringify"],"mappings":"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","file":"transformers.js","sourcesContent":["import _ from 'lodash';\r\nimport moment from 'moment';\r\nimport flatten from 'app/core/utils/flatten';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport TableModel from 'app/core/table_model';\r\n\r\nvar transformers = {};\r\n\r\ntransformers.timeseries_to_rows = {\r\n    description: 'Time series to rows',\r\n    getColumns: function () {\r\n        return [];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        model.columns = [\r\n            {text: 'Time', type: 'date'},\r\n            {text: 'Metric'},\r\n            {text: 'Value'},\r\n        ];\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            for (var y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n                model.rows.push([dp[1], series.target, dp[0]]);\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\ntransformers.timeseries_to_columns = {\r\n    description: 'Time series to columns',\r\n    getColumns: function () {\r\n        return [];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        model.columns.push({text: 'Time', type: 'date'});\r\n\r\n        // group by time\r\n        var points = {};\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            model.columns.push({text: series.target});\r\n\r\n            for (var y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n                var timeKey = dp[1].toString();\r\n\r\n                if (!points[timeKey]) {\r\n                    points[timeKey] = {time: dp[1]};\r\n                    points[timeKey][i] = dp[0];\r\n                } else {\r\n                    points[timeKey][i] = dp[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var time in points) {\r\n            var point = points[time];\r\n            var values = [point.time];\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n                var value = point[i];\r\n                values.push(value);\r\n            }\r\n\r\n            model.rows.push(values);\r\n        }\r\n    }\r\n};\r\n\r\ntransformers.timeseries_aggregations = {\r\n    description: 'Time series aggregations',\r\n    getColumns: function () {\r\n        return [\r\n            {text: 'Avg', value: 'avg'},\r\n            {text: 'Min', value: 'min'},\r\n            {text: 'Max', value: 'max'},\r\n            {text: 'Total', value: 'total'},\r\n            {text: 'Current', value: 'current'},\r\n            {text: 'Count', value: 'count'},\r\n        ];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        var i, y;\r\n        model.columns.push({text: 'Metric'});\r\n\r\n        if (panel.columns.length === 0) {\r\n            panel.columns.push({text: 'Avg', value: 'avg'});\r\n        }\r\n\r\n        for (i = 0; i < panel.columns.length; i++) {\r\n            model.columns.push({text: panel.columns[i].text});\r\n        }\r\n\r\n        for (i = 0; i < data.length; i++) {\r\n            var series = new TimeSeries({\r\n                datapoints: data[i].datapoints,\r\n                alias: data[i].target,\r\n            });\r\n\r\n            series.getFlotPairs('connected');\r\n            var cells = [series.alias];\r\n\r\n            for (y = 0; y < panel.columns.length; y++) {\r\n                cells.push(series.stats[panel.columns[y].value]);\r\n            }\r\n\r\n            model.rows.push(cells);\r\n        }\r\n    }\r\n};\r\n\r\ntransformers.annotations = {\r\n    description: 'Annotations',\r\n    getColumns: function () {\r\n        return [];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        model.columns.push({text: 'Time', type: 'date'});\r\n        model.columns.push({text: 'Title'});\r\n        model.columns.push({text: 'Text'});\r\n        model.columns.push({text: 'Tags'});\r\n\r\n        if (!data || data.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var evt = data[i];\r\n            model.rows.push([evt.min, evt.title, evt.text, evt.tags]);\r\n        }\r\n    }\r\n};\r\n\r\ntransformers.table = {\r\n    description: 'Table',\r\n    getColumns: function (data) {\r\n        if (!data || data.length === 0) {\r\n            return [];\r\n        }\r\n    },\r\n    transform: function (data, panel, model) {\r\n        if (!data || data.length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (data[0] === undefined) {\r\n            throw {message: 'Query result is not in table format, try using another transform.'};\r\n        }\r\n        if (data[0].type === undefined) {\r\n            throw {message: 'Query result is not in table format, try using another transform.'};\r\n        }\r\n        if (data[0].type !== 'table') {\r\n            throw {message: 'Query result is not in table format, try using another transform.'};\r\n        }\r\n        model.columns = data[0].columns;\r\n        model.rows = data[0].rows;\r\n    }\r\n};\r\n\r\ntransformers.json = {\r\n    description: 'JSON Data',\r\n    getColumns: function (data) {\r\n        if (!data || data.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        var names = {};\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            if (series.type !== 'docs') {\r\n                continue;\r\n            }\r\n\r\n            // only look at 100 docs\r\n            var maxDocs = Math.min(series.datapoints.length, 100);\r\n            for (var y = 0; y < maxDocs; y++) {\r\n                var doc = series.datapoints[y];\r\n                var flattened = flatten(doc, null);\r\n                for (var propName in flattened) {\r\n                    names[propName] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return _.map(names, function (value, key) {\r\n            return {text: key, value: key};\r\n        });\r\n    },\r\n    transform: function (data, panel, model) {\r\n        var i, y, z;\r\n        for (i = 0; i < panel.columns.length; i++) {\r\n            model.columns.push({text: panel.columns[i].text});\r\n        }\r\n\r\n        if (model.columns.length === 0) {\r\n            model.columns.push({text: 'JSON'});\r\n        }\r\n\r\n        for (i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n\r\n            for (y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n                var values = [];\r\n\r\n                if (_.isObject(dp) && panel.columns.length > 0) {\r\n                    var flattened = flatten(dp, null);\r\n                    for (z = 0; z < panel.columns.length; z++) {\r\n                        values.push(flattened[panel.columns[z].value]);\r\n                    }\r\n                } else {\r\n                    values.push(JSON.stringify(dp));\r\n                }\r\n\r\n                model.rows.push(values);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction getColumnInterchange(panel) {\r\n    if (panel.interchange) {\r\n        var array = panel.interchange.split(\":\");\r\n        if (array.length != 2) {\r\n            return null;\r\n        }\r\n        return {\r\n            names: array[0].split(\",\"),\r\n            values: array[1].split(\",\")\r\n        };\r\n\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getGroupByColumns(panel) {\r\n    var groupBys = [];\r\n    if (panel.groupBy) {\r\n        for (var m = 0; m < panel.groupBy.length; m++) {\r\n            groupBys.push(panel.groupBy[m].text);\r\n        }\r\n    }\r\n    return groupBys;\r\n}\r\n\r\nfunction getCalculateColumns(expression, operator) {\r\n    if (expression) {\r\n        var expressions = expression.split(\";\");\r\n        if (expressions.length < 1) {\r\n            return null;\r\n        }\r\n\r\n        var totalColumns = {\r\n            \"columns\": [],\r\n            \"expressions\": []\r\n        };\r\n\r\n        for (var i = 0; i < expressions.length; i++) {\r\n            var parameters = expressions[i].split(\"=\");\r\n            if (parameters.length != 2) {\r\n                continue;\r\n            }\r\n\r\n            var operators = parameters[1].split(operator);\r\n            if (operators.length > 1) {\r\n                totalColumns.columns.push(parameters[0]);\r\n                for (var j = 0; j < operators.length; j++) {\r\n                    totalColumns.columns.push(operators[j]);\r\n                }\r\n\r\n                totalColumns.expressions.push({\r\n                    \"result\": parameters[0],\r\n                    \"operators\": operators\r\n                });\r\n            }\r\n        }\r\n        return totalColumns;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getHiddenValues(panel) {\r\n    if (panel.hiddenValues) {\r\n        return panel.hiddenValues.split(\";\");\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction shouldHidden(hiddenValues, name, value) {\r\n    return hiddenValues.indexOf(name + \":\" + value) >= 0;\r\n}\r\n\r\nfunction transformDataToTable(data, panel) {\r\n    var model = new TableModel();\r\n\r\n    if (!data || data.length === 0) {\r\n        return model;\r\n    }\r\n\r\n    var transformer = transformers[panel.transform];\r\n    if (!transformer) {\r\n        throw {message: 'Transformer ' + panel.transformer + ' not found'};\r\n    }\r\n\r\n    //group by\r\n    groupby(data, panel);\r\n\r\n    transformer.transform(data, panel, model);\r\n    return model;\r\n}\r\n\r\nfunction getInterchangeColummnName(interchange, dp) {\r\n    var columnsName = [];\r\n    for (var w = 0; w < interchange.names.length; w++) {\r\n        columnsName.push(dp[interchange.names[w]]);\r\n    }\r\n    return columnsName.join(\"_\");\r\n}\r\n\r\nfunction appendValues(oldValue, newValue) {\r\n    if (!oldValue) {\r\n        return newValue;\r\n    }\r\n    if ($.isNumeric(newValue)) {\r\n        return oldValue + newValue;\r\n    } else {\r\n        if (oldValue.indexOf(newValue + \",\") < 0 && oldValue.indexOf(\",\" + newValue)) {\r\n            return oldValue + \", \" + newValue;\r\n        } else {\r\n            return oldValue;\r\n        }\r\n    }\r\n}\r\n\r\nfunction initRow(row, expressions) {\r\n    if (expressions != null) {\r\n        for (var x = 0; x < expressions.columns.length; x++) {\r\n            if (!row[expressions.columns[x]]) {\r\n                row[expressions.columns[x]] = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction calculateRow(row, expressions, operator) {\r\n    if (expressions != null && expressions.expressions != null) {\r\n        for (var z = 0; z < expressions.expressions.length; z++) {\r\n            row[expressions.expressions[z].result] = row[expressions.expressions[z].operators[0]];\r\n            for (var a = 1; a < expressions.expressions[z].operators.length; a++) {\r\n                if (operator === \"+\") {\r\n                    if(row[expressions.expressions[z].operators[a]]){\r\n                        if(row[expressions.expressions[z].result]){\r\n                            row[expressions.expressions[z].result] += row[expressions.expressions[z].operators[a]];\r\n                        }else{\r\n                            row[expressions.expressions[z].result] = row[expressions.expressions[z].operators[a]];\r\n                        }\r\n\r\n                    }\r\n                } else if (operator === \"-\") {\r\n                    if(row[expressions.expressions[z].result]&&row[expressions.expressions[z].operators[a]]) {\r\n                        row[expressions.expressions[z].result] -= row[expressions.expressions[z].operators[a]];\r\n                    }\r\n                } else if (operator === \"/\") {\r\n                    if(row[expressions.expressions[z].result]&&row[expressions.expressions[z].operators[a]]) {\r\n                        if (row[expressions.expressions[z].operators[a]] === 0) {\r\n                            row[expressions.expressions[z].result] = 0;\r\n                        } else {\r\n                            row[expressions.expressions[z].result] /= row[expressions.expressions[z].operators[a]];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction groupby(data, panel) {\r\n    if (panel.groupBy && panel.groupBy.length > 0) {\r\n        var map = {};\r\n        var interchange = getColumnInterchange(panel);\r\n        var groupBys = getGroupByColumns(panel);\r\n        var totals = getCalculateColumns(panel.total, \"+\");\r\n        var diffs = getCalculateColumns(panel.difference, \"-\");\r\n        var rates = getCalculateColumns(panel.rate, \"/\");\r\n        var hiddenValues = getHiddenValues(panel);\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            for (var y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n\r\n                var key = \"\";\r\n                for (var n = 0; n < groupBys.length; n++) {\r\n                    key += dp[groupBys[n]] + \",\";\r\n                }\r\n\r\n                var row = map[key];\r\n                if (row) {\r\n                    //append to key\r\n                    for (var name in dp) {\r\n                        if (groupBys.indexOf(name) < 0) {\r\n                            //need interchange row and column\r\n                            if (interchange != null && interchange.values.indexOf(name) >= 0) {\r\n                                if (!shouldHidden(hiddenValues, name, dp[name])) {\r\n                                    var columnName = getInterchangeColummnName(interchange, dp);\r\n                                    row[columnName] = appendValues(row[columnName], dp[name]);\r\n                                }\r\n                            } else if (interchange == null || (interchange != null && interchange.names.indexOf(name) < 0)) {\r\n                                if (!shouldHidden(hiddenValues, name, dp[name])) {\r\n                                    row[name] = appendValues(row[name], dp[name]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    //first create key\r\n                    row = {};\r\n                    //initRow(row, totals);\r\n                    //initRow(row, diffs);\r\n                    //initRow(row, rates);\r\n\r\n                    map[key] = row;\r\n                    for (var name1 in dp) {\r\n                        if (groupBys.indexOf(name1) > -1) {\r\n                            row[name1] = dp[name1];\r\n                        } else if (interchange != null && interchange.values.indexOf(name1) >= 0) {\r\n                            if (!shouldHidden(hiddenValues, name1, dp[interchange[1]])) {\r\n                                row[getInterchangeColummnName(interchange, dp)] = dp[name1];\r\n                            }\r\n                        } else if (interchange == null || (interchange != null && interchange.names.indexOf(name1) < 0)) {\r\n                            if (!shouldHidden(hiddenValues, name1, dp[name1])) {\r\n                                row[name1] = dp[name1];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            series.datapoints = [];\r\n            for (var name2 in map) {\r\n                var newRow = map[name2];\r\n                calculateRow(newRow, totals, \"+\");\r\n                calculateRow(newRow, rates, \"/\");\r\n                calculateRow(newRow, diffs, \"-\");\r\n\r\n                series.datapoints.push(newRow);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {transformers, transformDataToTable};\r\n"]}