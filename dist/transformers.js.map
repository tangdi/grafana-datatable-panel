{"version":3,"sources":["../src/transformers.js"],"names":["getColumnInterchange","panel","interchange","array","split","length","names","values","getGroupByColumns","groupBys","groupBy","m","push","text","getCalculateColumns","expression","operator","expressions","totalColumns","i","parameters","operators","columns","j","getHiddenValues","hiddenValues","shouldHidden","name","value","indexOf","splitColumn","dataPoint","splitChar","columnName","columnValue","splitValues","z","transformDataToTable","data","model","TableModel","transformer","transformers","transform","message","groupby","getInterchangeColummnName","dp","columnsName","w","join","appendValues","oldValue","newValue","$","isNumeric","initRow","row","x","calculateRow","result","a","dataPointCallBack","totals","total","diffs","difference","rates","rate","series","map","y","datapoints","key","n","name2","newRow","_","moment","flatten","TimeSeries","timeseries_to_rows","description","getColumns","type","rows","target","timeseries_to_columns","points","timeKey","toString","time","point","timeseries_aggregations","alias","getFlotPairs","cells","stats","annotations","evt","min","title","tags","table","undefined","json","maxDocs","Math","doc","flattened","propName","isEmpty","colData","trimData","emptyVals","trim","retVal","_checkEmpty","val","emptyVal","objType","Object","prototype","call","match","isArray","each","ev","hideEmptyCols","colsEmpty","enable","isObject","cellValue","JSON","stringify","visible"],"mappings":"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","file":"transformers.js","sourcesContent":["import _ from 'lodash';\r\nimport moment from 'moment';\r\nimport flatten from 'app/core/utils/flatten';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport TableModel from 'app/core/table_model';\r\n\r\nvar transformers = {};\r\n\r\ntransformers.timeseries_to_rows = {\r\n    description: 'Time series to rows',\r\n    getColumns: function () {\r\n        return [];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        model.columns = [\r\n            {text: 'Time', type: 'date'},\r\n            {text: 'Metric'},\r\n            {text: 'Value'},\r\n        ];\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            for (var y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n                model.rows.push([dp[1], series.target, dp[0]]);\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\ntransformers.timeseries_to_columns = {\r\n    description: 'Time series to columns',\r\n    getColumns: function () {\r\n        return [];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        model.columns.push({text: 'Time', type: 'date'});\r\n\r\n        // group by time\r\n        var points = {};\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            model.columns.push({text: series.target});\r\n\r\n            for (var y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n                var timeKey = dp[1].toString();\r\n\r\n                if (!points[timeKey]) {\r\n                    points[timeKey] = {time: dp[1]};\r\n                    points[timeKey][i] = dp[0];\r\n                } else {\r\n                    points[timeKey][i] = dp[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var time in points) {\r\n            var point = points[time];\r\n            var values = [point.time];\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n                var value = point[i];\r\n                values.push(value);\r\n            }\r\n\r\n            model.rows.push(values);\r\n        }\r\n    }\r\n};\r\n\r\ntransformers.timeseries_aggregations = {\r\n    description: 'Time series aggregations',\r\n    getColumns: function () {\r\n        return [\r\n            {text: 'Avg', value: 'avg'},\r\n            {text: 'Min', value: 'min'},\r\n            {text: 'Max', value: 'max'},\r\n            {text: 'Total', value: 'total'},\r\n            {text: 'Current', value: 'current'},\r\n            {text: 'Count', value: 'count'},\r\n        ];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        var i, y;\r\n        model.columns.push({text: 'Metric'});\r\n\r\n        if (panel.columns.length === 0) {\r\n            panel.columns.push({text: 'Avg', value: 'avg'});\r\n        }\r\n\r\n        for (i = 0; i < panel.columns.length; i++) {\r\n            model.columns.push({text: panel.columns[i].text});\r\n        }\r\n\r\n        for (i = 0; i < data.length; i++) {\r\n            var series = new TimeSeries({\r\n                datapoints: data[i].datapoints,\r\n                alias: data[i].target,\r\n            });\r\n\r\n            series.getFlotPairs('connected');\r\n            var cells = [series.alias];\r\n\r\n            for (y = 0; y < panel.columns.length; y++) {\r\n                cells.push(series.stats[panel.columns[y].value]);\r\n            }\r\n\r\n            model.rows.push(cells);\r\n        }\r\n    }\r\n};\r\n\r\ntransformers.annotations = {\r\n    description: 'Annotations',\r\n    getColumns: function () {\r\n        return [];\r\n    },\r\n    transform: function (data, panel, model) {\r\n        model.columns.push({text: 'Time', type: 'date'});\r\n        model.columns.push({text: 'Title'});\r\n        model.columns.push({text: 'Text'});\r\n        model.columns.push({text: 'Tags'});\r\n\r\n        if (!data || data.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var evt = data[i];\r\n            model.rows.push([evt.min, evt.title, evt.text, evt.tags]);\r\n        }\r\n    }\r\n};\r\n\r\ntransformers.table = {\r\n    description: 'Table',\r\n    getColumns: function (data) {\r\n        if (!data || data.length === 0) {\r\n            return [];\r\n        }\r\n    },\r\n    transform: function (data, panel, model) {\r\n        if (!data || data.length === 0) {\r\n            return;\r\n        }\r\n\r\n        if (data[0] === undefined) {\r\n            throw {message: 'Query result is not in table format, try using another transform.'};\r\n        }\r\n        if (data[0].type === undefined) {\r\n            throw {message: 'Query result is not in table format, try using another transform.'};\r\n        }\r\n        if (data[0].type !== 'table') {\r\n            throw {message: 'Query result is not in table format, try using another transform.'};\r\n        }\r\n        model.columns = data[0].columns;\r\n        model.rows = data[0].rows;\r\n    }\r\n};\r\n\r\ntransformers.json = {\r\n    description: 'JSON Data',\r\n    getColumns: function (data) {\r\n        if (!data || data.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        var names = {};\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            if (series.type !== 'docs') {\r\n                continue;\r\n            }\r\n\r\n            // only look at 100 docs\r\n            var maxDocs = Math.min(series.datapoints.length, 100);\r\n            for (var y = 0; y < maxDocs; y++) {\r\n                var doc = series.datapoints[y];\r\n                var flattened = flatten(doc, null);\r\n                for (var propName in flattened) {\r\n                    names[propName] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return _.map(names, function (value, key) {\r\n            return {text: key, value: key};\r\n        });\r\n    },\r\n    isEmpty: function(colData,trimData,emptyVals) {\r\n        // Trim the data (unless its set to false)\r\n        if (trimData)\r\n            colData = $.trim(colData);\r\n\r\n        // Basic check\r\n        if (colData === null || colData.length === 0)\r\n            return true;\r\n\r\n        // Default to false, any empty matches will reset to true\r\n        var retVal = false;\r\n\r\n        // Internal helper function to check the value against a custom defined empty value (which can be a\r\n        // regex pattern or a simple string)\r\n        var _checkEmpty = function (val, emptyVal) {\r\n            var objType = Object.prototype.toString.call(emptyVal);\r\n\r\n            var match = objType.match(/^\\[object\\s(.*)\\]$/);\r\n\r\n            // If its a regex pattern, then handle it differently\r\n            if (match[1] === 'RegExp')\r\n                return val.match(emptyVal);\r\n\r\n            // Note: Should this comparison maybe use a lenient/loose comparison operator? hmm..\r\n            return val == emptyVal;\r\n        };\r\n\r\n        // If multiple custom empty values are defined in an array, then check each\r\n        if ($.isArray(emptyVals)) {\r\n            $.each(emptyVals, function (i, ev) {\r\n                if (_checkEmpty(colData, ev))\r\n                    retVal = true;\r\n            });\r\n        }\r\n\r\n        // Otherwise, just check the one, if set\r\n        else if (typeof emptyVals !== 'undefined') {\r\n            if (_checkEmpty(colData, emptyVals))\r\n                retVal = true;\r\n        }\r\n\r\n        return retVal;\r\n    },\r\n    transform: function (data, panel, model) {\r\n        var i, y, z;\r\n        var hideEmptyCols = panel.hideEmptyCols;\r\n        var colsEmpty = [];\r\n        var emptyVals = \"N/A\";\r\n        if(hideEmptyCols && hideEmptyCols.enable && hideEmptyCols.emptyVals){\r\n            emptyVals = hideEmptyCols.emptyVals.split(\",\");\r\n        }\r\n        for (i = 0; i < panel.columns.length; i++) {\r\n            model.columns.push({text: panel.columns[i].text});\r\n\r\n            colsEmpty.push(true);\r\n        }\r\n\r\n        if (model.columns.length === 0) {\r\n            model.columns.push({text: 'JSON'});\r\n        }\r\n\r\n        for (i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n\r\n            for (y = 0; y < series.datapoints.length; y++) {\r\n                var dp = series.datapoints[y];\r\n                var values = [];\r\n\r\n                if (_.isObject(dp) && panel.columns.length > 0) {\r\n                    var flattened = flatten(dp, null);\r\n                    for (z = 0; z < panel.columns.length; z++) {\r\n                        let cellValue = flattened[panel.columns[z].value];\r\n                        if(hideEmptyCols && hideEmptyCols.enable && colsEmpty[z]){\r\n                           if(!this.isEmpty(cellValue,hideEmptyCols.trim,emptyVals)){\r\n                               colsEmpty[z] = false;\r\n                           }\r\n                        }\r\n                        values.push(cellValue);\r\n                    }\r\n                } else {\r\n                    values.push(JSON.stringify(dp));\r\n                }\r\n\r\n                model.rows.push(values);\r\n            }\r\n        }\r\n        if(hideEmptyCols && hideEmptyCols.enable){\r\n            //var api =  new $.fn.dataTable.Api({});\r\n            for(var x = 0; x < colsEmpty.length; x++){\r\n               panel.columns[x].visible = !colsEmpty[x];\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction getColumnInterchange(panel) {\r\n    if (panel.interchange) {\r\n        var array = panel.interchange.split(\":\");\r\n        if (array.length != 2) {\r\n            return null;\r\n        }\r\n        return {\r\n            names: array[0].split(\",\"),\r\n            values: array[1].split(\",\")\r\n        };\r\n\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getGroupByColumns(panel) {\r\n    var groupBys = [];\r\n    if (panel.groupBy) {\r\n        for (var m = 0; m < panel.groupBy.length; m++) {\r\n            groupBys.push(panel.groupBy[m].text);\r\n        }\r\n    }\r\n    return groupBys;\r\n}\r\n\r\nfunction getCalculateColumns(expression, operator) {\r\n    if (expression) {\r\n        var expressions = expression.split(\";\");\r\n        if (expressions.length < 1) {\r\n            return null;\r\n        }\r\n\r\n        var totalColumns = {\r\n            \"columns\": [],\r\n            \"expressions\": []\r\n        };\r\n\r\n        for (var i = 0; i < expressions.length; i++) {\r\n            var parameters = expressions[i].split(\"=\");\r\n            if (parameters.length != 2) {\r\n                continue;\r\n            }\r\n\r\n            var operators = parameters[1].split(operator);\r\n            if (operators.length > 1) {\r\n                totalColumns.columns.push(parameters[0]);\r\n                for (var j = 0; j < operators.length; j++) {\r\n                    totalColumns.columns.push(operators[j]);\r\n                }\r\n\r\n                totalColumns.expressions.push({\r\n                    \"result\": parameters[0],\r\n                    \"operators\": operators\r\n                });\r\n            }\r\n        }\r\n        return totalColumns;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getHiddenValues(panel) {\r\n    if (panel.hiddenValues) {\r\n        return panel.hiddenValues.split(\";\");\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction shouldHidden(hiddenValues, name, value) {\r\n    return hiddenValues.indexOf(name + \":\" + value) >= 0;\r\n}\r\n\r\nfunction splitColumn(dataPoint, panel) {\r\n    if (panel.splitColumn && panel.splitColumn.length > 0 && panel.splitChar) {\r\n        for (var i = 0; i < panel.splitColumn.length; i++) {\r\n            var columnName = panel.splitColumn[i].value;\r\n            var columnValue = dataPoint[columnName];\r\n            if (columnValue) {\r\n                var splitValues = columnValue.split(panel.splitChar);\r\n                if (splitValues.length > 0) {\r\n                    for (var z = 0; z < splitValues.length; z++) {\r\n                        dataPoint[columnName + \"_\" + z] = splitValues[z];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction transformDataToTable(data, panel) {\r\n    var model = new TableModel();\r\n\r\n    if (!data || data.length === 0) {\r\n        return model;\r\n    }\r\n\r\n    var transformer = transformers[panel.transform];\r\n    if (!transformer) {\r\n        throw {message: 'Transformer ' + panel.transformer + ' not found'};\r\n    }\r\n\r\n    //group by\r\n    groupby(data, panel, splitColumn);\r\n\r\n    transformer.transform(data, panel, model);\r\n    return model;\r\n}\r\n\r\nfunction getInterchangeColummnName(interchange, dp) {\r\n    var columnsName = [];\r\n    for (var w = 0; w < interchange.names.length; w++) {\r\n        columnsName.push(dp[interchange.names[w]]);\r\n    }\r\n    return columnsName.join(\"_\");\r\n}\r\n\r\nfunction appendValues(oldValue, newValue) {\r\n    if (!oldValue) {\r\n        return newValue;\r\n    }\r\n    if ($.isNumeric(newValue)) {\r\n        return oldValue + newValue;\r\n    } else {\r\n        if (oldValue.indexOf(newValue + \",\") < 0 && oldValue.indexOf(\",\" + newValue)) {\r\n            return oldValue + \", \" + newValue;\r\n        } else {\r\n            return oldValue;\r\n        }\r\n    }\r\n}\r\n\r\nfunction initRow(row, expressions) {\r\n    if (expressions != null) {\r\n        for (var x = 0; x < expressions.columns.length; x++) {\r\n            if (!row[expressions.columns[x]]) {\r\n                row[expressions.columns[x]] = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction calculateRow(row, expressions, operator) {\r\n    if (expressions != null && expressions.expressions != null) {\r\n        for (var z = 0; z < expressions.expressions.length; z++) {\r\n            row[expressions.expressions[z].result] = row[expressions.expressions[z].operators[0]];\r\n            for (var a = 1; a < expressions.expressions[z].operators.length; a++) {\r\n                if (operator === \"+\") {\r\n                    if (row[expressions.expressions[z].operators[a]]) {\r\n                        if (row[expressions.expressions[z].result]) {\r\n                            row[expressions.expressions[z].result] += row[expressions.expressions[z].operators[a]];\r\n                        } else {\r\n                            row[expressions.expressions[z].result] = row[expressions.expressions[z].operators[a]];\r\n                        }\r\n\r\n                    }\r\n                } else if (operator === \"-\") {\r\n                    if (row[expressions.expressions[z].result] && row[expressions.expressions[z].operators[a]]) {\r\n                        row[expressions.expressions[z].result] -= row[expressions.expressions[z].operators[a]];\r\n                    }\r\n                } else if (operator === \"/\") {\r\n                    if (row[expressions.expressions[z].result] && row[expressions.expressions[z].operators[a]]) {\r\n                        if (row[expressions.expressions[z].operators[a]] === 0) {\r\n                            row[expressions.expressions[z].result] = 0;\r\n                        } else {\r\n                            row[expressions.expressions[z].result] /= row[expressions.expressions[z].operators[a]];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction groupby(data, panel, dataPointCallBack) {\r\n    if (panel.groupBy && panel.groupBy.length > 0) {\r\n        var interchange = getColumnInterchange(panel);\r\n        var groupBys = getGroupByColumns(panel);\r\n        var totals = getCalculateColumns(panel.total, \"+\");\r\n        var diffs = getCalculateColumns(panel.difference, \"-\");\r\n        var rates = getCalculateColumns(panel.rate, \"/\");\r\n        var hiddenValues = getHiddenValues(panel);\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var series = data[i];\r\n            var map = {};\r\n            for (var y = 0; y < series.datapoints.length; y++) {\r\n                const dp = series.datapoints[y];\r\n\r\n                var key = \"\";\r\n                for (var n = 0; n < groupBys.length; n++) {\r\n                    key += dp[groupBys[n]] + \",\";\r\n                }\r\n\r\n                var row = map[key];\r\n                if (!row)  {\r\n                    //first create key\r\n                    row = {};\r\n                    map[key] = row;\r\n                    for (var m = 0; m < groupBys.length; m++){\r\n                        var groupBy = groupBys[m];\r\n                        if (groupBy in dp){\r\n                            row[groupBy] = dp[groupBy];\r\n                        }\r\n                    }\r\n                }\r\n                for (var name in dp) {\r\n                    if (groupBys.indexOf(name) < 0) {\r\n                        //need interchange row and column\r\n                        if (interchange != null && interchange.values.indexOf(name) >= 0) {\r\n                            if (!shouldHidden(hiddenValues, name, dp[name])) {\r\n                                var columnName = getInterchangeColummnName(interchange, dp);\r\n                                if(columnName in row){\r\n                                    row[columnName] = appendValues(row[columnName], dp[name]);\r\n                                }else{\r\n                                    row[columnName] = dp[name];\r\n                                }\r\n                            }\r\n                        } else if (interchange == null || interchange.names.indexOf(name) < 0) {\r\n                            if (!shouldHidden(hiddenValues, name, dp[name])) {\r\n                                if(name in row){\r\n                                    row[name] = appendValues(row[name], dp[name]);\r\n                                }else{\r\n                                    row[name] = dp[name];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            series.datapoints = [];\r\n            for (var name2 in map) {\r\n                var newRow = map[name2];\r\n                calculateRow(newRow, totals, \"+\");\r\n                calculateRow(newRow, rates, \"/\");\r\n                calculateRow(newRow, diffs, \"-\");\r\n                dataPointCallBack(newRow, panel);\r\n                series.datapoints.push(newRow);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {transformers, transformDataToTable};\r\n"]}