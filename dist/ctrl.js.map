{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","$","angular","kbn","FileExport","DataTable","transformDataToTable","transformers","DatatableRenderer","panelDefaults","targets","transform","rowsPerPage","showHeader","styles","type","pattern","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","scroll","scrollHeight","fontSize","sort","col","desc","datatableTheme","themeOptions","light","dark","rowNumbersEnabled","infoEnabled","searchEnabled","showCellBorders","showRowBorders","hoverEnabled","orderColumnEnabled","compactRowsEnabled","stripedRowsEnabled","lengthChangeEnabled","datatablePagingType","pagingTypes","text","value","themes","disabled","DatatablePanelCtrl","$scope","$injector","$http","$location","uiSegmentSrv","annotationsSrv","pageIndex","table","dataRaw","addColumnSegment","newPlusButton","fontSizes","colorModes","columnTypes","unitFormats","getUnitFormats","dateFormats","getColumnNames","_","map","panel","fields","defaults","System","config","paths","getPanelPath","import","grafanaBootData","user","lightTheme","dataLoaded","http","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","actions","push","click","panels","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","datatableOptionsPath","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","render","dataList","length","tmpPanelHeight","ctrl","height","row","replace","actualHeight","parseInt","renderer","isTimezoneUtc","$sanitize","get","exportTableDataToCsv","render_values","scope","elem","attrs","formatters","_this","renderPanel","panelHeight","getPanelHeight","renderData","renderingCompleted","column","without","$q","when","getColumns","segments","c","newSegment","find","plusButton","html","columnStyleDefaults","copy","style","subItem","index","ref","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport $ from 'jquery';\r\nimport angular from 'angular';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nimport * as FileExport from 'app/core/utils/file_export';\r\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\r\n\r\n// this is needed for basic datatables.net theme\r\n//import './libs/datatables.net-dt/css/jquery.dataTables.min.css!';\r\n\r\n// See this for styling https://datatables.net/manual/styling/theme-creator\r\n\r\n/*\r\nDark Theme Basic uses these values\r\n\r\ntable section border: #242222 rgb(36,34,34)\r\nrow/cell border: #141414 rgb(20,20,20)\r\nrow background: #1F1D1D  rgb(31,29,29)\r\nrow selected color:  #242222 rgb(36,34,34)\r\ncontrol text: #1FB2E5 rgb(31,178,229)\r\ncontrol text: white  (dataTables_paginate)\r\npaging active button: #242222 rgb(36,34,34)\r\npaging button hover: #111111 rgb(17,17,17)\r\n\r\nwith these modifications:\r\n.dataTables_wrapper .dataTables_paginate .paginate_button {\r\n  color: white\r\n}\r\ntable.dataTable tfoot th {\r\n  color: #1FB2E5;\r\n  font-weight: bold; }\r\n\r\n\r\nLight Theme Basic uses these values\r\n\r\ntable section border: #ECECEC rgb(236,236,236)\r\nrow/cell border: #FFFFFF rgb(255,255,255)\r\nrow background: #FBFBFB  rgb(251,251,251)\r\nrow selected color:  #ECECEC rgb(236,236,236)\r\ncontrol text: black\r\npaging active button: #BEBEBE\r\npaging button hover: #C0C0C0\r\n\r\nwith these modifications:\r\n.dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {\r\n  color: #1fb2e5 !important;\r\ntable.dataTable tfoot th {\r\n  color: #1FB2E5;\r\n  font-weight: bold; }\r\n*/\r\n\r\nimport './css/panel.css!';\r\n// themes attempt to modify the entire page, this \"contains\" the styling to the table only\r\nimport './css/datatables-wrapper.css!';\r\n\r\nimport {\r\n  transformDataToTable,\r\n  transformers\r\n} from './transformers';\r\n\r\nimport { DatatableRenderer } from './renderer';\r\n\r\nconst panelDefaults = {\r\n  targets: [{}],\r\n  transform: 'timeseries_to_columns',\r\n  rowsPerPage: 5,\r\n  showHeader: true,\r\n  styles: [\r\n    {\r\n      type: 'date',\r\n      pattern: 'Time',\r\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n      },\r\n    {\r\n      unit: 'short',\r\n      type: 'number',\r\n      decimals: 2,\r\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\r\n      colorMode: null,\r\n      pattern: '/.*/',\r\n      thresholds: [],\r\n      }\r\n    ],\r\n  columns: [],\r\n  scroll: false,\r\n  scrollHeight: 'default',\r\n  fontSize: '100%',\r\n  sort: {\r\n    col: 0,\r\n    desc: true\r\n  },\r\n  datatableTheme: 'basic_theme',\r\n  themeOptions: {\r\n    light: './css/datatable-light.css',\r\n    dark:  './css/datatable-dark.css'\r\n  },\r\n  rowNumbersEnabled: false,\r\n  infoEnabled: true,\r\n  searchEnabled: true,\r\n  showCellBorders: false,\r\n  showRowBorders: true,\r\n  hoverEnabled: true,\r\n  orderColumnEnabled: true,\r\n  compactRowsEnabled: false,\r\n  stripedRowsEnabled: true,\r\n  lengthChangeEnabled: true,\r\n  datatablePagingType: 'simple_numbers',\r\n  pagingTypes: [\r\n    {\r\n      text: 'Page number buttons only',\r\n      value: 'numbers',\r\n    },\r\n    {\r\n      text: \"'Previous' and 'Next' buttons only\",\r\n      value: 'simple'\r\n    },\r\n    {\r\n      text: \"'Previous' and 'Next' buttons, plus page numbers\",\r\n      value: 'simple_numbers'\r\n    },\r\n    {\r\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons\",\r\n      value: 'full'\r\n    },\r\n    {\r\n      text: \"'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\",\r\n      value: 'full_numbers'\r\n    },\r\n    {\r\n      text: \"'First' and 'Last' buttons, plus page numbers\",\r\n      value: 'first_last_numbers'\r\n    }\r\n  ],\r\n  themes: [\r\n    {\r\n      value: 'basic_theme',\r\n      text: 'Basic',\r\n      disabled: false,\r\n    },\r\n    {\r\n      value: 'bootstrap_theme',\r\n      text: 'Bootstrap',\r\n      disabled: true,\r\n    },\r\n    {\r\n      value: 'foundation_theme',\r\n      text: 'Foundation',\r\n      disabled: true,\r\n    },\r\n    {\r\n      value: 'themeroller_theme',\r\n      text: 'ThemeRoller',\r\n      disabled: true,\r\n    }\r\n  ]\r\n\r\n};\r\n\r\nexport class DatatablePanelCtrl extends MetricsPanelCtrl {\r\n\r\n  constructor($scope, $injector, $http, $location, uiSegmentSrv, annotationsSrv) {\r\n    super($scope, $injector);\r\n\r\n    this.pageIndex = 0;\r\n    this.table = null;\r\n    this.dataRaw = [];\r\n    this.transformers = transformers;\r\n    this.annotationsSrv = annotationsSrv;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    // editor\r\n\r\n    this.addColumnSegment = uiSegmentSrv.newPlusButton();\r\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\r\n    this.colorModes = [\r\n      {\r\n        text: 'Disabled',\r\n        value: null\r\n      },\r\n      {\r\n        text: 'Cell',\r\n        value: 'cell'\r\n      },\r\n      {\r\n        text: 'Value',\r\n        value: 'value'\r\n      },\r\n      {\r\n        text: 'Row',\r\n        value: 'row'\r\n      },\r\n      {\r\n        text: 'Row Column',\r\n        value: 'rowcolumn'\r\n      },\r\n    ];\r\n    this.columnTypes = [\r\n      {\r\n        text: 'Number',\r\n        value: 'number'\r\n      },\r\n      {\r\n        text: 'String',\r\n        value: 'string'\r\n      },\r\n      {\r\n        text: 'Date',\r\n        value: 'date'\r\n      },\r\n      {\r\n        text: 'Hidden',\r\n        value: 'hidden'\r\n      }\r\n    ];\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.dateFormats = [\r\n      {\r\n        text: 'YYYY-MM-DD HH:mm:ss',\r\n        value: 'YYYY-MM-DD HH:mm:ss'\r\n      },\r\n      {\r\n        text: 'MM/DD/YY h:mm:ss a',\r\n        value: 'MM/DD/YY h:mm:ss a'\r\n      },\r\n      {\r\n        text: 'MMMM D, YYYY LT',\r\n        value: 'MMMM D, YYYY LT'\r\n      },\r\n    ];\r\n    // this is used from bs-typeahead and needs to be instance bound\r\n    this.getColumnNames = () => {\r\n      if (!this.table) {\r\n        return [];\r\n      }\r\n      return _.map(this.table.columns, function(col) {\r\n        return col.text;\r\n      });\r\n    };\r\n\r\n    if (this.panel.styles === void 0) {\r\n      this.panel.styles = this.panel.columns;\r\n      this.panel.columns = this.panel.fields;\r\n      delete this.panel.columns;\r\n      delete this.panel.fields;\r\n    }\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    System.config({\r\n        paths: {\r\n            \"datatables.net\": this.getPanelPath() + \"libs/datatables.net/js/jquery.dataTables.min\",\r\n            \"datatables.net-bs\" : this.getPanelPath() + \"libs/datatables.net-bs/js/dataTables.bootstrap.min\",\r\n            \"datatables.net-jqui\" : this.getPanelPath() + \"libs/datatables.net-jqui/js/dataTables.jqueryui.min\",\r\n            \"datatables.net-zf\" : this.getPanelPath() + \"libs/datatables.net-zf/js/dataTables.foundation.min\",\r\n        }\r\n    });\r\n\r\n    // basic datatables theme\r\n    // alternative themes are disabled since they affect all datatable panels on same page currently\r\n    switch (this.panel.datatableTheme) {\r\n      case 'basic_theme':\r\n        System.import(this.getPanelPath() +  'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\r\n        if (grafanaBootData.user.lightTheme) {\r\n          System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\r\n        } else {\r\n          System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\r\n        }\r\n        break;\r\n      case 'bootstrap_theme':\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-bs/js/dataTables.bootstrap.min.js');\r\n        System.import(this.getPanelPath() + 'libs/bootstrap/dist/css/prefixed-bootstrap.min.css!');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-bs/css/dataTables.bootstrap.min.css!');\r\n        if (!grafanaBootData.user.lightTheme) {\r\n          System.import(this.getPanelPath() + 'css/prefixed-bootstrap-slate.min.css!');\r\n        }\r\n        break;\r\n      case 'foundation_theme':\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-zf/js/dataTables.foundation.min.js');\r\n        System.import(this.getPanelPath() + 'libs/foundation/css/prefixed-foundation.min.css!');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-zf/css/dataTables.foundation.min.css!');\r\n        break;\r\n      case 'themeroller_theme':\r\n        System.import(this.getPanelPath() +  'libs/datatables.net-jqui/js/dataTables.jqueryui.min.js');\r\n        System.import(this.getPanelPath() +  'libs/datatables.net-jqui/css/dataTables.jqueryui.min.css!');\r\n        System.import(this.getPanelPath() +  'css/jquery-ui-smoothness.css!');\r\n        break;\r\n    default:\r\n        System.import(this.getPanelPath() +  'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\r\n        if (grafanaBootData.user.lightTheme) {\r\n          System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\r\n        } else {\r\n          System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\r\n        }\r\n        break;\r\n    }\r\n    this.dataLoaded = true;\r\n    this.http = $http;\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\r\n  }\r\n\r\n  onInitPanelActions(actions) {\r\n      actions.push({\r\n        text: 'Export CSV',\r\n        click: 'ctrl.exportCsv()'\r\n      });\r\n    }\r\n\r\n  // setup the editor\r\n  onInitEditMode() {\r\n    // determine the path to this plugin\r\n    var panels = grafanaBootData.settings.panels;\r\n    var thisPanel = panels[this.pluginId];\r\n    var thisPanelPath = thisPanel.baseUrl + '/';\r\n    // add the relative path to the partial\r\n    var optionsPath = thisPanelPath + 'partials/editor.options.html';\r\n    this.addEditorTab('Options', optionsPath, 2);\r\n    var datatableOptionsPath = thisPanelPath + 'partials/datatables.options.html';\r\n    this.addEditorTab('Datatable Options', datatableOptionsPath, 3);\r\n  }\r\n\r\n  getPanelPath() {\r\n    var panels = grafanaBootData.settings.panels;\r\n    var thisPanel = panels[this.pluginId];\r\n    // the system loader preprends publib to the url, add a .. to go back one level\r\n    var thisPanelPath = '../' + thisPanel.baseUrl + '/';\r\n    return thisPanelPath;\r\n  }\r\n\r\n  issueQueries(datasource) {\r\n    this.pageIndex = 0;\r\n    if (this.panel.transform === 'annotations') {\r\n      this.setTimeQueryStart();\r\n      return this.annotationsSrv.getAnnotations({\r\n          dashboard: this.dashboard,\r\n          panel: this.panel,\r\n          range: this.range\r\n        })\r\n        .then(annotations => {\r\n          return {\r\n            data: annotations\r\n          };\r\n        });\r\n    }\r\n    return super.issueQueries(datasource);\r\n  }\r\n\r\n  onDataError(err) {\r\n    this.dataRaw = [];\r\n    this.render();\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    this.dataRaw = dataList;\r\n    this.pageIndex = 0;\r\n\r\n    // automatically correct transform mode based on data\r\n    if (this.dataRaw && this.dataRaw.length) {\r\n      if (this.dataRaw[0].type === 'table') {\r\n        this.panel.transform = 'table';\r\n      } else {\r\n        if (this.dataRaw[0].type === 'docs') {\r\n          this.panel.transform = 'json';\r\n        } else {\r\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\r\n            this.panel.transform = 'timeseries_to_rows';\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    this.table = transformDataToTable(this.dataRaw, this.panel);\r\n    this.table.sort(this.panel.sort);\r\n    return super.render(this.table);\r\n  }\r\n\r\n  getPanelHeight() {\r\n      // panel can have a fixed height via options\r\n      var tmpPanelHeight = this.$scope.ctrl.panel.height;\r\n      // if that is blank, try to get it from our row\r\n      if (typeof tmpPanelHeight === 'undefined') {\r\n        // get from the row instead\r\n        tmpPanelHeight = this.row.height;\r\n        // default to 250px if that was undefined also\r\n        if (typeof tmpPanelHeight === 'undefined') {\r\n          tmpPanelHeight = 250;\r\n        }\r\n      }\r\n      else {\r\n        // convert to numeric value\r\n        tmpPanelHeight = tmpPanelHeight.replace(\"px\",\"\");\r\n      }\r\n      var actualHeight = parseInt(tmpPanelHeight);\r\n      // grafana minimum height for a panel is 250px\r\n      if (actualHeight < 250) {\r\n        actualHeight = 250;\r\n      }\r\n      return actualHeight;\r\n  }\r\n\r\n  exportCsv() {\r\n    var renderer = new DatatableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize, this.$injector.get('linkSrv'));\r\n    FileExport.exportTableDataToCsv(renderer.render_values());\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    var data;\r\n    var panel = ctrl.panel;\r\n    var formatters = [];\r\n    var _this = this;\r\n\r\n    /**\r\n     * [renderPanel description]\r\n     * @return {[type]} [description]\r\n     */\r\n    function renderPanel() {\r\n      var renderer = new DatatableRenderer(panel, ctrl.table, ctrl.dashboard.isTimezoneUtc(), ctrl.$sanitize, ctrl.$injector.get('linkSrv'));\r\n      renderer.render();\r\n      _this.dataLoaded = true;\r\n    }\r\n\r\n    ctrl.panel.panelHeight = this.getPanelHeight();\r\n    ctrl.events.on('render', function(renderData) {\r\n      data = renderData || data;\r\n      if (data) {\r\n        renderPanel();\r\n      }\r\n      ctrl.renderingCompleted();\r\n    });\r\n  }\r\n\r\n  // editor methods\r\n  //\r\n  // cell and row borders cannot both be set at the same time\r\n  showCellBordersChanged() {\r\n    if (this.panel.showCellBorders) {\r\n      this.panel.showRowBorders = false;\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  themeChanged() {\r\n    //console.log(this.panel.datatableTheme);\r\n    this.render();\r\n  }\r\n\r\n  transformChanged() {\r\n    this.panel.columns = [];\r\n    this.render();\r\n  }\r\n  removeColumn(column) {\r\n    this.panel.columns = _.without(this.panel.columns, column);\r\n    this.render();\r\n  }\r\n\r\n  getColumnOptions() {\r\n    if (!this.dataRaw) {\r\n      return this.$q.when([]);\r\n    }\r\n    var columns = this.transformers[this.panel.transform].getColumns(this.dataRaw);\r\n    var segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({\r\n      value: c.text\r\n    }));\r\n    return this.$q.when(segments);\r\n  }\r\n\r\n  addColumn() {\r\n    var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\r\n    var column = _.find(columns, {\r\n      text: this.addColumnSegment.value\r\n    });\r\n\r\n    if (column) {\r\n      this.panel.columns.push(column);\r\n      this.render();\r\n    }\r\n\r\n    var plusButton = this.uiSegmentSrv.newPlusButton();\r\n    this.addColumnSegment.html = plusButton.html;\r\n    this.addColumnSegment.value = plusButton.value;\r\n  }\r\n\r\n  addColumnStyle() {\r\n      var columnStyleDefaults = {\r\n        unit: 'short',\r\n        type: 'number',\r\n        decimals: 2,\r\n        colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\r\n        colorMode: null,\r\n        pattern: '/.*/',\r\n        dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n        thresholds: [],\r\n      };\r\n      this.panel.styles.push(angular.copy(columnStyleDefaults));\r\n  }\r\n  removeColumnStyle(style) {\r\n    this.panel.styles = _.without(this.panel.styles, style);\r\n  }\r\n  setUnitFormat(column, subItem) {\r\n    column.unit = subItem.value;\r\n    this.render();\r\n  }\r\n  invertColorOrder(index) {\r\n    var ref = this.panel.styles[index].colors;\r\n    var copy = ref[0];\r\n    ref[0] = ref[2];\r\n    ref[2] = copy;\r\n    this.render();\r\n  }\r\n}\r\nDatatablePanelCtrl.templateUrl = 'partials/template.html';\r\n"]}