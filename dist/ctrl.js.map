{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","$","angular","kbn","FileExport","DataTable","transformDataToTable","transformers","DatatableRenderer","panelDefaults","targets","transform","rowsPerPage","showHeader","styles","type","pattern","dateFormat","unit","decimals","colors","colorMode","thresholds","columns","groupBy","splitColumn","splitChar","scroll","scrollx","scrollHeight","fontSize","sort","col","desc","sortDirection","datatableTheme","themeOptions","light","dark","rowNumbersEnabled","infoEnabled","searchEnabled","showCellBorders","showRowBorders","hoverEnabled","orderColumnEnabled","compactRowsEnabled","stripedRowsEnabled","lengthChangeEnabled","datatablePagingType","pagingTypes","text","value","themes","disabled","responsive","enable","hiddenColumns","editor","create","edit","editSingle","remove","removeSingle","buttons","collection","columnsToggle","columnsVisibility","columnToggle","columnVisibility","colvis","colvisGroup","colvisRestore","copy","copyHtml5","print","pageLength","csv","csvHtml5","excel","excelHtml5","pdf","pdfHtml5","selectAll","selectNone","selectCells","selectColumns","selectRows","hideEmptyCols","trim","perPage","onStateLoad","DatatablePanelCtrl","$scope","$injector","$http","$location","uiSegmentSrv","annotationsSrv","pageIndex","table","dataRaw","addColumnSegment","newPlusButton","addGroupBySegment","addSplitSegment","addHiddenColumnBySegment","fontSizes","colorModes","columnTypes","unitFormats","getUnitFormats","dateFormats","sortDirections","getColumnNames","_","map","panel","fields","defaults","System","config","paths","getPanelPath","import","grafanaBootData","user","lightTheme","dataLoaded","http","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","actions","push","click","panels","settings","thisPanel","pluginId","thisPanelPath","baseUrl","optionsPath","addEditorTab","datatableOptionsPath","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","render","dataList","length","emptyData","rows","tmpPanelHeight","ctrl","height","row","replace","actualHeight","parseInt","renderer","isTimezoneUtc","$sanitize","get","exportTableDataToCsv","render_values","scope","elem","attrs","formatters","_this","renderPanel","panelHeight","getPanelHeight","renderData","renderingCompleted","column","without","$q","when","getColumns","segments","c","newSegment","find","plusButton","html","columnStyleDefaults","style","subItem","index","ref","templateUrl"],"mappings":"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","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport $ from 'jquery';\r\nimport angular from 'angular';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nimport * as FileExport from 'app/core/utils/file_export';\r\nimport DataTable from './libs/datatables.net/js/jquery.dataTables.min.js';\r\n\r\n// this is needed for basic datatables.net theme\r\n//import './libs/datatables.net-dt/css/jquery.dataTables.min.css!';\r\n\r\n// See this for styling https://datatables.net/manual/styling/theme-creator\r\n\r\n/*\r\nDark Theme Basic uses these values\r\n\r\ntable section border: #242222 rgb(36,34,34)\r\nrow/cell border: #141414 rgb(20,20,20)\r\nrow background: #1F1D1D  rgb(31,29,29)\r\nrow selected color:  #242222 rgb(36,34,34)\r\ncontrol text: #1FB2E5 rgb(31,178,229)\r\ncontrol text: white  (dataTables_paginate)\r\npaging active button: #242222 rgb(36,34,34)\r\npaging button hover: #111111 rgb(17,17,17)\r\n\r\nwith these modifications:\r\n.dataTables_wrapper .dataTables_paginate .paginate_button {\r\n  color: white\r\n}\r\ntable.dataTable tfoot th {\r\n  color: #1FB2E5;\r\n  font-weight: bold; }\r\n\r\n\r\nLight Theme Basic uses these values\r\n\r\ntable section border: #ECECEC rgb(236,236,236)\r\nrow/cell border: #FFFFFF rgb(255,255,255)\r\nrow background: #FBFBFB  rgb(251,251,251)\r\nrow selected color:  #ECECEC rgb(236,236,236)\r\ncontrol text: black\r\npaging active button: #BEBEBE\r\npaging button hover: #C0C0C0\r\n\r\nwith these modifications:\r\n.dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {\r\n  color: #1fb2e5 !important;\r\ntable.dataTable tfoot th {\r\n  color: #1FB2E5;\r\n  font-weight: bold; }\r\n*/\r\n\r\nimport './css/panel.css!';\r\n// themes attempt to modify the entire page, this \"contains\" the styling to the table only\r\nimport './css/datatables-wrapper.css!';\r\n\r\nimport {\r\n    transformDataToTable,\r\n    transformers\r\n} from './transformers';\r\n\r\nimport {DatatableRenderer} from './renderer';\r\n\r\nconst panelDefaults = {\r\n    targets: [{}],\r\n    transform: 'timeseries_to_columns',\r\n    rowsPerPage: 5,\r\n    showHeader: true,\r\n    styles: [\r\n        {\r\n            type: 'date',\r\n            pattern: 'Time',\r\n            dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n        },\r\n        {\r\n            unit: 'short',\r\n            type: 'number',\r\n            decimals: 2,\r\n            colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\r\n            colorMode: null,\r\n            pattern: '/.*/',\r\n            thresholds: [],\r\n        }\r\n    ],\r\n    columns: [],\r\n    groupBy: [],\r\n    splitColumn: [],\r\n    splitChar: null,\r\n    scroll: false,\r\n    scrollx: false,\r\n    scrollHeight: 'default',\r\n    fontSize: '100%',\r\n    sort: {\r\n        col: 0,\r\n        desc: true\r\n    },\r\n    sortDirection: 'desc',\r\n    datatableTheme: 'basic_theme',\r\n    themeOptions: {\r\n        light: './css/datatable-light.css',\r\n        dark: './css/datatable-dark.css'\r\n    },\r\n    rowNumbersEnabled: false,\r\n    infoEnabled: true,\r\n    searchEnabled: true,\r\n    showCellBorders: false,\r\n    showRowBorders: true,\r\n    hoverEnabled: true,\r\n    orderColumnEnabled: true,\r\n    compactRowsEnabled: false,\r\n    stripedRowsEnabled: true,\r\n    lengthChangeEnabled: true,\r\n    datatablePagingType: 'simple_numbers',\r\n    pagingTypes: [\r\n        {\r\n            text: 'Page number buttons only',\r\n            value: 'numbers',\r\n        },\r\n        {\r\n            text: \"'Previous' and 'Next' buttons only\",\r\n            value: 'simple'\r\n        },\r\n        {\r\n            text: \"'Previous' and 'Next' buttons, plus page numbers\",\r\n            value: 'simple_numbers'\r\n        },\r\n        {\r\n            text: \"'First', 'Previous', 'Next' and 'Last' buttons\",\r\n            value: 'full'\r\n        },\r\n        {\r\n            text: \"'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\",\r\n            value: 'full_numbers'\r\n        },\r\n        {\r\n            text: \"'First' and 'Last' buttons, plus page numbers\",\r\n            value: 'first_last_numbers'\r\n        }\r\n    ],\r\n    themes: [\r\n        {\r\n            value: 'basic_theme',\r\n            text: 'Basic',\r\n            disabled: false,\r\n        },\r\n        {\r\n            value: 'bootstrap_theme',\r\n            text: 'Bootstrap',\r\n            disabled: true,\r\n        },\r\n        {\r\n            value: 'foundation_theme',\r\n            text: 'Foundation',\r\n            disabled: true,\r\n        },\r\n        {\r\n            value: 'themeroller_theme',\r\n            text: 'ThemeRoller',\r\n            disabled: true,\r\n        }\r\n    ],\r\n    responsive: {\r\n        enable: false,\r\n        hiddenColumns: []\r\n    },\r\n    editor: {\r\n        enable: false,\r\n        create: false,\r\n        edit: false,\r\n        editSingle: false,\r\n        remove: false,\r\n        removeSingle: false\r\n    },\r\n    buttons: {\r\n        collection: false,\r\n        columnsToggle: false,\r\n        columnsVisibility: false,\r\n        columnToggle: false,\r\n        columnVisibility: false,\r\n        colvis: false,\r\n        colvisGroup: false,\r\n        colvisRestore: false,\r\n        copy: false,\r\n        copyHtml5: false,\r\n        print: false,\r\n        pageLength: false,\r\n        csv: false,\r\n        csvHtml5: false,\r\n        excel: false,\r\n        excelHtml5: false,\r\n        pdf: false,\r\n        pdfHtml5: false,\r\n        selectAll: false,\r\n        selectNone: false,\r\n        selectCells: false,\r\n        selectColumns: false,\r\n        selectRows: false\r\n    },\r\n    hideEmptyCols: {\r\n        enable: false,\r\n        trim: true,\r\n        perPage: false,\r\n        onStateLoad: true,\r\n    }\r\n};\r\n\r\nexport class DatatablePanelCtrl extends MetricsPanelCtrl {\r\n\r\n    constructor($scope, $injector, $http, $location, uiSegmentSrv, annotationsSrv) {\r\n        super($scope, $injector);\r\n\r\n        this.pageIndex = 0;\r\n        this.table = null;\r\n        this.dataRaw = [];\r\n        this.transformers = transformers;\r\n        this.annotationsSrv = annotationsSrv;\r\n        this.uiSegmentSrv = uiSegmentSrv;\r\n        // editor\r\n\r\n        this.addColumnSegment = uiSegmentSrv.newPlusButton();\r\n        this.addGroupBySegment = uiSegmentSrv.newPlusButton();\r\n        this.addSplitSegment = uiSegmentSrv.newPlusButton();\r\n        this.addHiddenColumnBySegment = uiSegmentSrv.newPlusButton();\r\n        this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\r\n        this.colorModes = [\r\n            {\r\n                text: 'Disabled',\r\n                value: null\r\n            },\r\n            {\r\n                text: 'Cell',\r\n                value: 'cell'\r\n            },\r\n            {\r\n                text: 'Value',\r\n                value: 'value'\r\n            },\r\n            {\r\n                text: 'Row',\r\n                value: 'row'\r\n            },\r\n            {\r\n                text: 'Row Column',\r\n                value: 'rowcolumn'\r\n            },\r\n        ];\r\n        this.columnTypes = [\r\n            {\r\n                text: 'Number',\r\n                value: 'number'\r\n            },\r\n            {\r\n                text: 'String',\r\n                value: 'string'\r\n            },\r\n            {\r\n                text: 'Date',\r\n                value: 'date'\r\n            },\r\n            {\r\n                text: 'Hidden',\r\n                value: 'hidden'\r\n            }\r\n        ];\r\n        this.unitFormats = kbn.getUnitFormats();\r\n        this.dateFormats = [\r\n            {\r\n                text: 'YYYY-MM-DD HH:mm:ss',\r\n                value: 'YYYY-MM-DD HH:mm:ss'\r\n            },\r\n            {\r\n                text: 'MM/DD/YY h:mm:ss a',\r\n                value: 'MM/DD/YY h:mm:ss a'\r\n            },\r\n            {\r\n                text: 'MMMM D, YYYY LT',\r\n                value: 'MMMM D, YYYY LT'\r\n            },\r\n        ];\r\n        this.sortDirections = [\"desc\", \"asc\"];\r\n        // this is used from bs-typeahead and needs to be instance bound\r\n        this.getColumnNames = () => {\r\n            if (!this.table) {\r\n                return [];\r\n            }\r\n            return _.map(this.table.columns, function (col) {\r\n                return col.text;\r\n            });\r\n        };\r\n\r\n        if (this.panel.styles === void 0) {\r\n            this.panel.styles = this.panel.columns;\r\n            this.panel.columns = this.panel.fields;\r\n            delete this.panel.columns;\r\n            delete this.panel.fields;\r\n        }\r\n        _.defaults(this.panel, panelDefaults);\r\n\r\n        System.config({\r\n            paths: {\r\n\r\n                \"datatables.net\": this.getPanelPath() + \"libs/datatables.net/js/jquery.dataTables.min\",\r\n                // \"datatables.net-bs\": this.getPanelPath() + \"libs/datatables.net-bs/js/dataTables.bootstrap.min\",\r\n                // \"datatables.net-jqui\": this.getPanelPath() + \"libs/datatables.net-jqui/js/dataTables.jqueryui.min\",\r\n                // \"datatables.net-zf\": this.getPanelPath() + \"libs/datatables.net-zf/js/dataTables.foundation.min\",\r\n                \"datatables.net-fixedcolumns\": this.getPanelPath() + \"libs/datatables.net-fixedcolumns/js/dataTables.fixedColumns.min\",\r\n                \"datatables.net-responsive\": this.getPanelPath() + \"libs/datatables.net-responsive/js/dataTables.responsive.min\",\r\n                \"datatables.net-buttons\": this.getPanelPath() + \"libs/datatables.net-buttons/js/dataTables.buttons.min\"\r\n            }\r\n        });\r\n\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-responsive/js/dataTables.responsive.min.js');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/dataTables.buttons.min.js');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.colVis.min.js');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.html5.min.js');\r\n        System.import(this.getPanelPath() + 'libs/datatables.net-buttons/js/buttons.print.min.js');\r\n        // System.import(this.getPanelPath() + 'libs/datatables.net-select/js/dataTables.select.min.js');\r\n        // basic datatables theme\r\n        // alternative themes are disabled since they affect all datatable panels on same page currently\r\n        switch (this.panel.datatableTheme) {\r\n            case 'basic_theme':\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-responsive-dt/css/responsive.dataTables.min.css!');\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-buttons-dt/css/buttons.dataTables.min.css!');\r\n\r\n                if (grafanaBootData.user.lightTheme) {\r\n                    System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\r\n                } else {\r\n                    System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\r\n                }\r\n                break;\r\n            case 'bootstrap_theme':\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-bs/js/dataTables.bootstrap.min.js');\r\n                System.import(this.getPanelPath() + 'libs/bootstrap/dist/css/prefixed-bootstrap.min.css!');\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-bs/css/dataTables.bootstrap.min.css!');\r\n                if (!grafanaBootData.user.lightTheme) {\r\n                    System.import(this.getPanelPath() + 'css/prefixed-bootstrap-slate.min.css!');\r\n                }\r\n                break;\r\n            case 'foundation_theme':\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-zf/js/dataTables.foundation.min.js');\r\n                System.import(this.getPanelPath() + 'libs/foundation/css/prefixed-foundation.min.css!');\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-zf/css/dataTables.foundation.min.css!');\r\n                break;\r\n            case 'themeroller_theme':\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-jqui/js/dataTables.jqueryui.min.js');\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-jqui/css/dataTables.jqueryui.min.css!');\r\n                System.import(this.getPanelPath() + 'css/jquery-ui-smoothness.css!');\r\n                break;\r\n            default:\r\n                System.import(this.getPanelPath() + 'libs/datatables.net-dt/css/jquery.dataTables.min.css!');\r\n                if (grafanaBootData.user.lightTheme) {\r\n                    System.import(this.getPanelPath() + this.panel.themeOptions.light + '!css');\r\n                } else {\r\n                    System.import(this.getPanelPath() + this.panel.themeOptions.dark + \"!css\");\r\n                }\r\n                break;\r\n        }\r\n        this.dataLoaded = true;\r\n        this.http = $http;\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\r\n    }\r\n\r\n    onInitPanelActions(actions) {\r\n        actions.push({\r\n            text: 'Export CSV',\r\n            click: 'ctrl.exportCsv()'\r\n        });\r\n    }\r\n\r\n    // setup the editor\r\n    onInitEditMode() {\r\n        // determine the path to this plugin\r\n        var panels = grafanaBootData.settings.panels;\r\n        var thisPanel = panels[this.pluginId];\r\n        var thisPanelPath = thisPanel.baseUrl + '/';\r\n        // add the relative path to the partial\r\n        var optionsPath = thisPanelPath + 'partials/editor.options.html';\r\n        this.addEditorTab('Options', optionsPath, 2);\r\n        var datatableOptionsPath = thisPanelPath + 'partials/datatables.options.html';\r\n        this.addEditorTab('Datatable Options', datatableOptionsPath, 3);\r\n    }\r\n\r\n    getPanelPath() {\r\n        var panels = grafanaBootData.settings.panels;\r\n        var thisPanel = panels[this.pluginId];\r\n        // the system loader preprends publib to the url, add a .. to go back one level\r\n        var thisPanelPath = '../' + thisPanel.baseUrl + '/';\r\n        return thisPanelPath;\r\n    }\r\n\r\n    issueQueries(datasource) {\r\n        this.pageIndex = 0;\r\n        if (this.panel.transform === 'annotations') {\r\n            this.setTimeQueryStart();\r\n            return this.annotationsSrv.getAnnotations({\r\n                dashboard: this.dashboard,\r\n                panel: this.panel,\r\n                range: this.range\r\n            })\r\n                .then(annotations => {\r\n                    return {\r\n                        data: annotations\r\n                    };\r\n                });\r\n        }\r\n        return super.issueQueries(datasource);\r\n    }\r\n\r\n    onDataError(err) {\r\n        this.dataRaw = [];\r\n        this.render();\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        this.dataRaw = dataList;\r\n        this.pageIndex = 0;\r\n\r\n        // automatically correct transform mode based on data\r\n        if (this.dataRaw && this.dataRaw.length) {\r\n            if (this.dataRaw[0].type === 'table') {\r\n                this.panel.transform = 'table';\r\n            } else {\r\n                if (this.dataRaw[0].type === 'docs') {\r\n                    this.panel.transform = 'json';\r\n                } else {\r\n                    if (this.panel.transform === 'table' || this.panel.transform === 'json') {\r\n                        this.panel.transform = 'timeseries_to_rows';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        this.table = transformDataToTable(this.dataRaw, this.panel);\r\n        this.table.sort(this.panel.sort);\r\n        this.panel.emptyData = this.table.rows.length === 0 || this.table.columns.length === 0;\r\n        return super.render(this.table);\r\n    }\r\n\r\n    getPanelHeight() {\r\n        // panel can have a fixed height via options\r\n        var tmpPanelHeight = this.$scope.ctrl.panel.height;\r\n        // if that is blank, try to get it from our row\r\n        if (typeof tmpPanelHeight === 'undefined') {\r\n            // get from the row instead\r\n            tmpPanelHeight = this.row.height;\r\n            // default to 250px if that was undefined also\r\n            if (typeof tmpPanelHeight === 'undefined') {\r\n                tmpPanelHeight = 250;\r\n            }\r\n        }\r\n        else {\r\n            // convert to numeric value\r\n            tmpPanelHeight = tmpPanelHeight.replace(\"px\", \"\");\r\n        }\r\n        var actualHeight = parseInt(tmpPanelHeight);\r\n        // grafana minimum height for a panel is 250px\r\n        if (actualHeight < 250) {\r\n            actualHeight = 250;\r\n        }\r\n        return actualHeight;\r\n    }\r\n\r\n    exportCsv() {\r\n        var renderer = new DatatableRenderer(this.panel, this.table, this.dashboard.isTimezoneUtc(), this.$sanitize, this.$injector.get('linkSrv'));\r\n        FileExport.exportTableDataToCsv(renderer.render_values());\r\n    }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        var data;\r\n        var panel = ctrl.panel;\r\n        var formatters = [];\r\n        var _this = this;\r\n\r\n        /**\r\n         * [renderPanel description]\r\n         * @return {[type]} [description]\r\n         */\r\n        function renderPanel() {\r\n            var renderer = new DatatableRenderer(panel, ctrl.table, ctrl.dashboard.isTimezoneUtc(), ctrl.$sanitize, ctrl.$injector.get('linkSrv'));\r\n            renderer.render();\r\n            _this.dataLoaded = true;\r\n        }\r\n\r\n        ctrl.panel.panelHeight = this.getPanelHeight();\r\n        ctrl.events.on('render', function (renderData) {\r\n            data = renderData || data;\r\n            if (data) {\r\n                renderPanel();\r\n            }\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n\r\n    // editor methods\r\n    //\r\n    // cell and row borders cannot both be set at the same time\r\n    showCellBordersChanged() {\r\n        if (this.panel.showCellBorders) {\r\n            this.panel.showRowBorders = false;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    themeChanged() {\r\n        //console.log(this.panel.datatableTheme);\r\n        this.render();\r\n    }\r\n\r\n    transformChanged() {\r\n        this.panel.columns = [];\r\n        this.panel.groupBy = [];\r\n        this.panel.splitColumn = [];\r\n        this.render();\r\n    }\r\n\r\n    removeColumn(column) {\r\n        this.panel.columns = _.without(this.panel.columns, column);\r\n        this.render();\r\n    }\r\n\r\n    removeGroupBy(column) {\r\n        this.panel.groupBy = _.without(this.panel.groupBy, column);\r\n        this.render();\r\n    }\r\n\r\n    removeSplitColumn(column) {\r\n        this.panel.splitColumn = _.without(this.panel.splitColumn, column);\r\n        this.render();\r\n    }\r\n\r\n    removeHiddenColumns(column) {\r\n        this.panel.responsive.hiddenColumns = _.without(this.panel.responsive.hiddenColumns, column);\r\n        this.render();\r\n    }\r\n\r\n    getColumnOptions() {\r\n        if (!this.dataRaw) {\r\n            return this.$q.when([]);\r\n        }\r\n        var columns = this.transformers[this.panel.transform].getColumns(this.dataRaw);\r\n        var segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({\r\n            value: c.text\r\n        }));\r\n        return this.$q.when(segments);\r\n    }\r\n\r\n    addColumn() {\r\n        var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\r\n        var column = _.find(columns, {\r\n            text: this.addColumnSegment.value\r\n        });\r\n\r\n        if (column) {\r\n            this.panel.columns.push(column);\r\n\r\n        } else {\r\n            this.panel.columns.push({text: this.addColumnSegment.value, value: this.addColumnSegment.value});\r\n        }\r\n        this.render();\r\n\r\n        var plusButton = this.uiSegmentSrv.newPlusButton();\r\n        this.addColumnSegment.html = plusButton.html;\r\n        this.addColumnSegment.value = plusButton.value;\r\n    }\r\n\r\n    addGroupBy() {\r\n        var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\r\n        var column = _.find(columns, {\r\n            text: this.addGroupBySegment.value\r\n        });\r\n\r\n        if (column) {\r\n            this.panel.groupBy.push(column);\r\n            this.render();\r\n        }\r\n\r\n        var plusButton = this.uiSegmentSrv.newPlusButton();\r\n        this.addGroupBySegment.html = plusButton.html;\r\n        this.addGroupBySegment.value = plusButton.value;\r\n    }\r\n\r\n    addSplitColumn() {\r\n        var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\r\n        var column = _.find(columns, {\r\n            text: this.addSplitSegment.value\r\n        });\r\n\r\n        if (column) {\r\n            this.panel.splitColumn.push(column);\r\n            this.render();\r\n        }\r\n\r\n        var plusButton = this.uiSegmentSrv.newPlusButton();\r\n        this.addSplitSegment.html = plusButton.html;\r\n        this.addSplitSegment.value = plusButton.value;\r\n    }\r\n\r\n    addHiddenColumn() {\r\n        var columns = transformers[this.panel.transform].getColumns(this.dataRaw);\r\n        var column = _.find(columns, {\r\n            text: this.addHiddenColumnBySegment.value\r\n        });\r\n\r\n        if (column) {\r\n            this.panel.responsive.hiddenColumns.push(column);\r\n            this.render();\r\n        }\r\n\r\n        var plusButton = this.uiSegmentSrv.newPlusButton();\r\n        this.addHiddenColumnBySegment.html = plusButton.html;\r\n        this.addHiddenColumnBySegment.value = plusButton.value;\r\n    }\r\n\r\n    addColumnStyle() {\r\n        var columnStyleDefaults = {\r\n            unit: 'short',\r\n            type: 'number',\r\n            decimals: 2,\r\n            colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\r\n            colorMode: null,\r\n            pattern: '/.*/',\r\n            dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            thresholds: [],\r\n        };\r\n        this.panel.styles.push(angular.copy(columnStyleDefaults));\r\n    }\r\n\r\n    removeColumnStyle(style) {\r\n        this.panel.styles = _.without(this.panel.styles, style);\r\n    }\r\n\r\n    setUnitFormat(column, subItem) {\r\n        column.unit = subItem.value;\r\n        this.render();\r\n    }\r\n\r\n    invertColorOrder(index) {\r\n        var ref = this.panel.styles[index].colors;\r\n        var copy = ref[0];\r\n        ref[0] = ref[2];\r\n        ref[2] = copy;\r\n        this.render();\r\n    }\r\n}\r\n\r\nDatatablePanelCtrl.templateUrl = 'partials/template.html';\r\n"]}